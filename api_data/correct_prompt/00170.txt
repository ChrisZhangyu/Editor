业务功能逻辑：获取当前用户id，在t_message_user表中查询id为当前用户id的数据页；判断用户id是否存在于表t_message中；如果存在则将输入参数和用户id一起输出到页面中；返回{"code": 1, "message": "成功", "response": {"total": 7, "list": [{"id": 66, "title": "国庆假说明", "messageId": 17, "content": "假期七天请注意安全。。。", "readed": true, "createTime": "2021-09-25 14:51:32", "sendUserName": "admin"}]}}.

需要检查的代码：
```java
// ApiResponse.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}
```
```java
// MessagePageRequest.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}

import lombok.Data;

@Data
public class MessagePageRequest {
    private int pageIndex;
    private int pageSize;
}
```
```java
// TMessage.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}

import lombok.Data;

@Data
public class MessagePageRequest {
    private int pageIndex;
    private int pageSize;
}

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class TMessage {
    private int id;
    private String title;
    private String content;
    private Date createTime;
    private int sendUserId;
    private String sendUserName;
    private String sendRealName;
    private int receiveUserCount;
    private int readCount;
}
```
```java
// TMessageUser.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}

import lombok.Data;

@Data
public class MessagePageRequest {
    private int pageIndex;
    private int pageSize;
}

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class TMessage {
    private int id;
    private String title;
    private String content;
    private Date createTime;
    private int sendUserId;
    private String sendUserName;
    private String sendRealName;
    private int receiveUserCount;
    private int readCount;
}

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class TMessageUser {
    private int id;
    private int messageId;
    private int receiveUserId;
    private String receiveUserName;
    private String receiveRealName;
    private boolean readed;
    private Date createTime;
    private Date readTime;
}
```

```java
// MessageService.java
package com.example.service;

import com.example.entity.MessagePageRequest;
import com.example.entity.ApiResponse;
import com.example.entity.TMessage;

import java.util.List;

public interface MessageService {
    ApiResponse<List<TMessage>> getMessagePage(MessagePageRequest request);
}
```

```java
// MessageServiceImpl.java
package com.example.service.impl;

import com.example.mapper.MessageMapper;
import com.example.entity.MessagePageRequest;
import com.example.mapper.MessageUserMapper;
import com.example.service.MessageService;
import com.example.entity.TMessage;
import com.example.entity.ApiResponse;
import com.example.entity.TMessageUser;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class MessageServiceImpl implements MessageService {

    private final MessageMapper messageMapper;
    private final MessageUserMapper messageUserMapper;

    @Autowired
    public MessageServiceImpl(MessageMapper messageMapper, MessageUserMapper messageUserMapper) {
        this.messageMapper = messageMapper;
        this.messageUserMapper = messageUserMapper;
    }

    @Override
    public ApiResponse<List<TMessage>> getMessagePage(MessagePageRequest request) {
        // 获取当前用户id
        int currentUserId = getCurrentUserId();

        // 在t_message_user表中查询id为当前用户id的数据页
        List<TMessageUser> messageUserList = messageUserMapper.getMessageUserPage(currentUserId, request.getPageIndex(), request.getPageSize());

        // 判断用户id是否存在于表t_message中
        List<Integer> messageIdList = messageUserMapper.getMessageIdListByUserId(currentUserId);

        // 如果存在则将输入参数和用户id一起输出到页面中
        List<TMessage> messageList = messageMapper.getMessagePage(request.getPageIndex(), request.getPageSize(), messageIdList);

        // 返回结果
        return new ApiResponse<>(1, "成功", messageList);
    }

    private int getCurrentUserId() {
        // 获取当前用户id的逻辑
        return 1;
    }
}
```

```java
// MessageController.java
package com.example.controller;

import com.example.entity.MessagePageRequest;
import com.example.service.MessageService;
import com.example.entity.TMessage;
import com.example.entity.ApiResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/wx/student/user/message")
public class MessageController {

    private final MessageService messageService;

    @Autowired
    public MessageController(MessageService messageService) {
        this.messageService = messageService;
    }

    @PostMapping("/page")
    public ApiResponse<List<TMessage>> getMessagePage(@RequestBody MessagePageRequest request) {
        return messageService.getMessagePage(request);
    }
}
```

```java
// MessageMapper.java
package com.example.mapper;

import com.example.entity.TMessage;

import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface MessageMapper {
    List<TMessage> getMessagePage(@Param("pageIndex") int pageIndex, @Param("pageSize") int pageSize, @Param("messageIdList") List<Integer> messageIdList);
}
```
```java
// MessageUserMapper.java
package com.example.mapper;

import com.example.entity.TMessage;

import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface MessageMapper {
    List<TMessage> getMessagePage(@Param("pageIndex") int pageIndex, @Param("pageSize") int pageSize, @Param("messageIdList") List<Integer> messageIdList);
}
import com.example.entity.TMessageUser;

import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface MessageUserMapper {
    List<TMessageUser> getMessageUserPage(@Param("userId") int userId, @Param("pageIndex") int pageIndex, @Param("pageSize") int pageSize);

    List<Integer> getMessageIdListByUserId(@Param("userId") int userId);
}
```

```xml
<!-- MessageUserMapper.xml -->

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.MessageUserMapper">
    <select id="getMessageUserPage" resultType="com.example.entity.TMessageUser">
        SELECT * FROM t_message_user
        WHERE receive_user_id = #{userId}
        LIMIT #{pageIndex}, #{pageSize}
    </select>

    <select id="getMessageIdListByUserId" resultType="java.lang.Integer">
        SELECT message_id FROM t_message_user
        WHERE receive_user_id = #{userId}
    </select>
</mapper>

```

代码执行的错误信息：
```运行错误
D:\迅雷下载\xzs-project_test\wx_message_page_system\src\main\java\com\example\entity\MessagePageRequest.java:17
java: 需要class, interface或enum
```
```功能错误
分页查询有问题
```