业务功能逻辑：
在ums_user表中查询用户，查询条件是username等于输入参数；在bms_follow表中查询对象，查询条件是parent_id等于输入参数、follower_id等于ums_user.id，如果对象为空，返回data为"未关注！"；在bms_follow表中删除对象，删除条件是parent_id等于ums_user.id、follower_id等于输入参数，返回data为"取关成功".

需要检查的代码：
```java
// ApiResponse.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object data;
}
```

```java
// UmsUser.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UmsUser {
    private String id;
    private String username;
    private String alias;
    private String password;
    private String avatar;
    private String email;
    private String mobile;
    private int score;
    private String token;
    private String bio;
    private boolean active;
    private boolean status;
    private String roleId;
    private Date createTime;
    private Date modifyTime;
}
```

```java
// UserService.java
package com.example.service;


import com.example.entity.UmsUser;

public interface UserService {
    UmsUser getUserByUsername(String username);
    String unfollowUser(String userId, String followerId);
}
```

```java
// UserServiceImpl.java
package com.example.service.impl;

import com.example.entity.UmsUser;
import com.example.mapper.BmsFollowMapper;
import com.example.mapper.UmsUserMapper;
import com.example.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserServiceImpl implements UserService {

    private final UmsUserMapper umsUserMapper;
    private final BmsFollowMapper bmsFollowMapper;

    @Autowired
    public UserServiceImpl(UmsUserMapper umsUserMapper, BmsFollowMapper bmsFollowMapper) {
        this.umsUserMapper = umsUserMapper;
        this.bmsFollowMapper = bmsFollowMapper;
    }

    @Override
    public UmsUser getUserByUsername(String username) {
        return umsUserMapper.getUserByUsername(username);
    }

    @Override
    public String unfollowUser(String userId, String followerId) {
        if (bmsFollowMapper.getFollowObject(userId, followerId) == null) {
            return "未关注！";
        }
        bmsFollowMapper.deleteFollowObject(userId, followerId);
        return "取关成功";
    }
}
```

```java
// UserController.java
package com.example.controller;

import com.example.entity.UmsUser;
import com.example.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/relationship")
public class UserController {

    private final UserService userService;

    @Autowired
    public UserController(UserService userService) {
        this.userService = userService;
    }

    @GetMapping("/unsubscribe/{userId}")
    public ApiResponse unsubscribeUser(@PathVariable String userId, @RequestHeader String userName) {
        UmsUser user = userService.getUserByUsername(userName);
        if (user == null) {
            return new ApiResponse(400, "用户不存在", null);
        }
        return new ApiResponse(200, "操作成功", userService.unfollowUser(user.getId(), userId));
    }
}
```

```java
// BmsFollowMapper.java
package com.example.mapper;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface BmsFollowMapper {
    @Select("SELECT * FROM bms_follow WHERE parent_id = #{parentId} AND follower_id = #{followerId}")
    Object getFollowObject(@Param("parentId") String parentId, @Param("followerId") String followerId);

    @Delete("DELETE FROM bms_follow WHERE parent_id = #{parentId} AND follower_id = #{followerId}")
    void deleteFollowObject(@Param("parentId") String parentId, @Param("followerId") String followerId);
}
```

```java
// UmsUserMapper.java
package com.example.mapper;

import com.example.entity.UmsUser;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface UmsUserMapper {
    UmsUser getUserByUsername(@Param("username") String username);
}
```

```xml
<!-- BmsFollowMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.BmsFollowMapper">
    <select id="getFollowObject" parameterType="String" resultType="java.lang.Object">
        SELECT * FROM bms_follow WHERE parent_id = #{parentId} AND follower_id = #{followerId}
    </select>

    <delete id="deleteFollowObject" parameterType="String">
        DELETE FROM bms_follow WHERE parent_id = #{parentId} AND follower_id = #{followerId}
    </delete>
</mapper>
```

```xml
<!-- UmsUserMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UmsUserMapper">
    <select id="getUserByUsername" parameterType="String" resultType="com.example.entity.UmsUser">
        SELECT * FROM ums_user WHERE username = #{username}
    </select>
</mapper>
```

代码执行的错误信息：
```运行错误
UserController.java:24:12
java: 找不到符号
  符号:   类 ApiResponse
  位置: 类 com.example.controller.UserController
Mapped Statements collection already contains value for com.example.mapper.BmsFollowMapper.getFollowObject. please check file [BmsFollowMapper.xml] and BmsFollowMapper.java (best guess).
```

```功能错误
```