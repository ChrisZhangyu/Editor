```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object data;
}
```

```java
// Post.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "bms_post")
public class Post {
    @Id
    @Column(name = "id", length = 20)
    private String id;

    @Column(name = "title")
    private String title;

    @Column(name = "content", columnDefinition = "longtext")
    private String content;

    @Column(name = "user_id", length = 20)
    private String userId;

    @Column(name = "comments")
    private int comments;

    @Column(name = "collects")
    private int collects;

    @Column(name = "view")
    private int view;

    @Column(name = "top")
    private boolean top;

    @Column(name = "essence")
    private boolean essence;

    @Column(name = "section_id")
    private String sectionId;

    @Column(name = "create_time")
    private Date createTime;

    @Column(name = "modify_time")
    private Date modifyTime;
}
```

```java
// UmsUser.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UmsUser {
    private String id;
    private String username;
    private String alias;
    private String password;
    private String avatar;
    private String email;
    private String mobile;
    private int score;
    private String token;
    private String bio;
    private boolean active;
    private boolean status;
    private String roleId;
    private Date createTime;
    private Date modifyTime;
}
```

```java
// PostService.java
package com.example.service;

import com.example.entity.ApiResponse;
import com.example.entity.Post;
import com.example.entity.UmsUser;
import com.example.mapper.PostMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;

@Service
public class PostService {
    @Autowired
    private PostMapper postMapper;

    public ApiResponse updatePost(String userName, Post post) {
        UmsUser user = postMapper.getUserByUsername(userName);
        if (user == null) {
            return new ApiResponse(400, "用户不存在", null);
        }
        if (!user.getId().equals(post.getUserId())) {
            return new ApiResponse(400, "非本人无权修改", null);
        }
        post.setModifyTime(new Date());
        postMapper.updatePost(post);
        return new ApiResponse(200, "操作成功", post);
    }
}
```

```java
// PostController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.Post;
import com.example.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/post")
public class PostController {
    @Autowired
    private PostService postService;

    @PostMapping("/update")
    public ApiResponse updatePost(@RequestHeader("userName") String userName, @RequestBody Post post) {
        return postService.updatePost(userName, post);
    }
}
```

```java
// PostMapper.java
package com.example.mapper;

import com.example.entity.Post;
import com.example.entity.UmsUser;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface PostMapper {
    UmsUser getUserByUsername(@Param("username") String username);

    void updatePost(Post post);
}
```

```xml
<!-- PostMapper.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.PostMapper">
    <select id="getUserByUsername" parameterType="String" resultType="com.example.entity.UmsUser">
        SELECT * FROM ums_user WHERE username = #{username}
    </select>

    <update id="updatePost" parameterType="com.example.entity.Post">
        UPDATE bms_post SET title = #{title}, content = #{content}, modify_time = #{modifyTime} WHERE id = #{id}
    </update>
</mapper>
```