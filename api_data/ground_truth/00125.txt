
```java
// Administrator.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "tb_administrator")
public class Administrator {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "administrator_id")
    private Integer administratorId;

    @Column(name = "user_name", length = 30)
    private String userName;

    @Column(name = "pass_word", length = 30)
    private String passWord;

    @Column(name = "nick_name", length = 30)
    private String nickName;

    @Column(name = "super_level")
    private Boolean superLevel;

    @Column(name = "phone")
    private Long phone;
}
```

```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T data;
}
```

```java
// AdminService.java
package com.example.service;

import com.example.entity.Administrator;
import com.example.entity.ApiResponse;

public interface AdminService {
    ApiResponse<Object> deleteAdmin(int adminId);
}
```

```java
// AdminServiceImpl.java
package com.example.service.impl;

import com.example.entity.Administrator;
import com.example.entity.ApiResponse;
import com.example.mapper.AdminMapper;
import com.example.service.AdminService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class AdminServiceImpl implements AdminService {

    private final AdminMapper adminMapper;

    @Autowired
    public AdminServiceImpl(AdminMapper adminMapper) {
        this.adminMapper = adminMapper;
    }

    @Override
    public ApiResponse<Object> deleteAdmin(int adminId) {
        Administrator admin = adminMapper.getAdminById(adminId);
        if (admin == null) {
            return new ApiResponse<>(-1002, "管理员不存在", null);
        }
        adminMapper.deleteAdmin(adminId);
        return new ApiResponse<>(100, "成功", null);
    }
}
```

```java
// AdminController.java
package com.example.controller;

import com.example.entity.Administrator;
import com.example.entity.ApiResponse;
import com.example.service.AdminService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/admin/v1/admins")
public class AdminController {

    private final AdminService adminService;

    @Autowired
    public AdminController(AdminService adminService) {
        this.adminService = adminService;
    }

    @DeleteMapping("/{adminId}")
    public ApiResponse<Object> deleteAdmin(@PathVariable int adminId) {
        return adminService.deleteAdmin(adminId);
    }
}
```

```java
// AdminMapper.java
package com.example.mapper;

import com.example.entity.Administrator;

public interface AdminMapper {
    Administrator getAdminById(int adminId);
    void deleteAdmin(int adminId);
}
```

```xml
<!-- AdminMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.AdminMapper">
    <select id="getAdminById" parameterType="int" resultType="com.example.entity.Administrator">
        SELECT * FROM tb_administrator WHERE administrator_id = #{adminId}
    </select>

    <delete id="deleteAdmin" parameterType="int">
        DELETE FROM tb_administrator WHERE administrator_id = #{adminId}
    </delete>
</mapper>
```