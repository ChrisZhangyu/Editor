```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T data;
}
```

```java
// Good.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "tb_good")
public class Good {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "good_id")
    private Integer goodId;

    @Column(name = "category_second_id")
    private Integer categorySecondId;

    @Column(name = "good_name", length = 20)
    private String goodName;

    @Column(name = "image", length = 100)
    private String image;

    @Column(name = "price", precision = 10, scale = 2)
    private Double price;

    @Column(name = "original_price", precision = 10, scale = 2)
    private Double originalPrice;

    @Column(name = "inventory")
    private Integer inventory;

    @Column(name = "sold_count")
    private Integer soldCount;

    @Column(name = "spec", length = 20)
    private String spec;

    @Column(name = "origin", length = 10)
    private String origin;
}
```

```java
// GoodService.java
package com.example.service;

import com.example.entity.Good;

import java.util.List;

public interface GoodService {
    List<Good> getGoods(int page, int rows, String orderBy, Good good);
}
```

```java
// GoodServiceImpl.java
package com.example.service.impl;

import com.example.entity.ApiResponse;
import com.example.entity.Good;
import com.example.mapper.GoodMapper;
import com.example.service.GoodService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class GoodServiceImpl implements GoodService {

    @Autowired
    private GoodMapper goodMapper;

    @Override
    public List<Good> getGoods(int page, int rows, String orderBy, Good good) {
        // 在tb_good表中分页查询商品列表的逻辑
        // 只获取tb_good.inventory大于0的记录
        // 获取结果按orderBy进行排序
        int start = (page - 1) * rows;
        int size = rows;
        List<Good> goodList = goodMapper.selectGoods(good, start, size, orderBy);
        // 返回查询结果
        return goodList;
    }
}
```

```java
// GoodController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.Good;
import com.example.service.GoodService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/user/v1")
public class GoodController {
    private final GoodService goodService;

    @Autowired
    public GoodController(GoodService goodService) {
        this.goodService = goodService;
    }

    @GetMapping("/goods")
    public ApiResponse<List<Good>> getGoods(@RequestParam int page, @RequestParam int rows, @RequestParam String orderBy, @RequestBody Good good) {
        List<Good> goods = goodService.getGoods(page, rows, orderBy, good);
        return new ApiResponse<>(100, "成功", goods);
    }
}
```

```java
// GoodMapper.java
package com.example.mapper;

import com.example.entity.Good;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface GoodMapper {
    List<Good> selectGoods(@Param("good") Good good, @Param("start") int start, @Param("size") int size, @Param("orderBy") String orderBy);
}
```

```xml
<!-- GoodMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.GoodMapper">
    <select id="selectGoods" resultType="com.example.entity.Good">
        SELECT *
        FROM tb_good
        WHERE inventory > 0
        <if test="good.goodId != null">
            AND good_id = #{good.goodId}
        </if>
        <if test="good.goodName != null">
            AND good_name = #{good.goodName}
        </if>
        <if test="good.categorySecondId != null">
            AND category_second_id = #{good.categorySecondId}
        </if>
        ORDER BY ${orderBy}
        LIMIT #{start}, #{size}
    </select>
</mapper>

```