```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private String status;
    private String message;
    private Object data;
}
```

```java
// LinLog.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "lin_log")
public class LinLog {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;

    @Column(name = "message")
    private String message;

    @Column(name = "user_id")
    private Integer userId;

    @Column(name = "username")
    private String username;

    @Column(name = "status_code")
    private Integer statusCode;

    @Column(name = "method")
    private String method;

    @Column(name = "path")
    private String path;

    @Column(name = "permission")
    private String permission;

    @Column(name = "create_time")
    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime;

    @Column(name = "update_time")
    @Temporal(TemporalType.TIMESTAMP)
    private Date updateTime;

    @Column(name = "delete_time")
    @Temporal(TemporalType.TIMESTAMP)
    private Date deleteTime;

    @Column(name = "is_deleted")
    private Boolean isDeleted;
}
```

```java
// LogService.java
package com.example.service;

import com.example.entity.LinLog;

import java.util.List;

public interface LogService {
    List<String> getUsernames(int start, int size);
}
```

```java
// LogServiceImpl.java
package com.example.service.impl;

import com.example.entity.LinLog;
import com.example.mapper.LogMapper;

import com.example.service.LogService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class LogServiceImpl implements LogService {

    private final LogMapper logMapper;

    @Autowired
    public LogServiceImpl(LogMapper logMapper) {
        this.logMapper = logMapper;
    }

    @Override
    public List<String> getUsernames(int start, int size) {
        return logMapper.getUsernames(start, size);
    }
}
```

```java
// LogController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.service.LogService;
import com.example.entity.LinLog;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/cms/log")
public class LogController {

    private final LogService logService;

    @Autowired
    public LogController(LogService logService) {
        this.logService = logService;
    }

    @GetMapping("/users")
    public ApiResponse getUsers(@RequestParam int page, @RequestParam int count) {
        int start = (page - 1) * count;
        List<String> usernames = logService.getUsernames(start, count);
        return new ApiResponse("success", "操作成功", usernames);
    }
}
```

```java
// LogMapper.java
package com.example.mapper;

import com.example.entity.LinLog;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface LogMapper {
    List<String> getUsernames(@Param("start") int start, @Param("size") int size);
}
```

```xml
<!-- LogMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.LogMapper">

    <select id="getUsernames" resultType="java.lang.String">
        SELECT username
        FROM lin_log
        WHERE is_deleted = 0
        GROUP BY username
        HAVING COUNT(*) > 0
        LIMIT #{start}, #{size}
    </select>

</mapper>

```