```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T data;
}
```

```java
// BmsPostTag.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "bms_post_tag")
public class BmsPostTag {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Long id;

    @Column(name = "tag_id", length = 20)
    private String tagId;

    @Column(name = "topic_id", length = 20)
    private String topicId;
}
```

```java
// BmsTag.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "bms_tag")
public class BmsTag {
    @Id
    @Column(name = "id", length = 20)
    private String id;

    @Column(name = "name")
    private String name;

    @Column(name = "topic_count")
    private int topicCount;
}
```

```java
// Post.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "bms_post")
public class Post {
    @Id
    @Column(name = "id", length = 20)
    private String id;

    @Column(name = "title")
    private String title;

    @Column(name = "content", columnDefinition = "longtext")
    private String content;

    @Column(name = "user_id", length = 20)
    private String userId;

    @Column(name = "comments")
    private int comments;

    @Column(name = "collects")
    private int collects;

    @Column(name = "view")
    private int view;

    @Column(name = "top")
    private boolean top;

    @Column(name = "essence")
    private boolean essence;

    @Column(name = "section_id")
    private String sectionId;

    @Column(name = "create_time")
    private Date createTime;

    @Column(name = "modify_time")
    private Date modifyTime;
}
```

```java
// PostVO.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PostVO implements Serializable {
    private String id;
    private String userId;
    private String avatar;
    private String alias;
    private String username;
    private String title;
    private int comments;
    private boolean top;
    private boolean essence;
    private int collects;
    private List<BmsTag> tags;
    private int view;
    private String createTime;
    private String modifyTime;
}
```

```java
// UmsUser.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UmsUser {

    private String id;
    private String username;
    private String alias;
    private String password;
    private String avatar;
    private String email;
    private String mobile;
    private int score;
    private String token;
    private String bio;
    private boolean active;
    private boolean status;
    private String roleId;
    private Date createTime;
    private Date modifyTime;
}
```

```java
// PostService.java
package com.example.service;

import com.example.entity.PostVO;

import java.util.List;

public interface PostService {
    List<PostVO> getPostList(String tab, int pageNo, int pageSize);
}
```

```java
// PostServiceImpl.java
package com.example.service.impl;

import com.example.entity.BmsTag;
import com.example.entity.PostVO;
import com.example.mapper.PostMapper;
import com.example.mapper.PostTagMapper;
import com.example.mapper.TagMapper;
import com.example.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class PostServiceImpl implements PostService {

    private final PostMapper postMapper;
    private final PostTagMapper postTagMapper;
    private final TagMapper tagMapper;

    @Autowired
    public PostServiceImpl(PostMapper postMapper, PostTagMapper postTagMapper, TagMapper tagMapper) {
        this.postMapper = postMapper;
        this.postTagMapper = postTagMapper;
        this.tagMapper = tagMapper;
    }

    @Override
    public List<PostVO> getPostList(String tab, int pageNo, int pageSize) {
        List<PostVO> postList;
        int offset = (request.getStart() - 1) * request.getSize();
        int row_count = request.getSize();
        if (!"hot".equals(tab)) {
            postList = postMapper.getPostListByTab(tab, offset, row_count);
        } else {
            postList = postMapper.getHotPostList(offset, row_count);
        }

        for (PostVO post : postList) {
            List<String> tagIds = postTagMapper.getTagIdsByTopicId(post.getId());
            if (!tagIds.isEmpty()) {
                List<BmsTag> tags = tagMapper.getTagsByIds(tagIds);
                post.setTags(tags);
            }
        }

        return postList;
    }
}
```

```java
// PostController.java
package com.example.controller;

import com.example.entity.PostVO;
import com.example.entity.ApiResponse;
import com.example.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/post")
public class PostController {

    private final PostService postService;

    @Autowired
    public PostController(PostService postService) {
        this.postService = postService;
    }

    @GetMapping("/list")
    public ApiResponse<List<PostVO>> getPostList(@RequestParam("tab") String tab,
                                                 @RequestParam("pageNo") int pageNo,
                                                 @RequestParam("pageSize") int pageSize) {
        List<PostVO> postList = postService.getPostList(tab, pageNo, pageSize);
        return new ApiResponse<>(200, "操作成功", postList);
    }
}
```

```java
// PostMapper.java
package com.example.mapper;

import com.example.entity.PostVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface PostMapper {
    List<PostVO> getPostListByTab(@Param("tab") String tab, @Param("pageNo") int pageNo, @Param("pageSize") int pageSize);

    List<PostVO> getHotPostList(@Param("pageNo") int pageNo, @Param("pageSize") int pageSize);
}
```

```java
// PostTagMapper.java
package com.example.mapper;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface PostTagMapper {
    List<String> getTagIdsByTopicId(@Param("topicId") String topicId);
}
```

```java
// TagMapper.java
package com.example.mapper;

import com.example.entity.BmsTag;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface TagMapper {
    List<BmsTag> getTagsByIds(@Param("tagIds") List<String> tagIds);
}
```

```xml
<!-- PostMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.mapper.PostMapper">
    <select id="getPostListByTab" resultType="com.example.entity.PostVO">
        SELECT bms_post.id, bms_post.title, bms_post.comments, bms_post.top, bms_post.essence, bms_post.collects, bms_post.view, bms_post.create_time, bms_post.modify_time,
        ums_user.id AS userId, ums_user.avatar, ums_user.alias, ums_user.username
        FROM bms_post
        LEFT JOIN ums_user ON bms_post.user_id = ums_user.id
        <if test="tab != 'hot'">
            order by bms_post.create_time desc
            LIMIT #{pageSize} OFFSET #{pageNo}
        </if>
    </select>

    <select id="getHotPostList" resultType="com.example.entity.PostVO">
        SELECT bms_post.id, bms_post.title, bms_post.comments, bms_post.top, bms_post.essence, bms_post.collects, bms_post.view, bms_post.create_time, bms_post.modify_time,
        ums_user.id AS userId, ums_user.avatar, ums_user.alias, ums_user.username
        FROM bms_post
        LEFT JOIN ums_user ON bms_post.user_id = ums_user.id
        ORDER BY bms_post.view DESC, bms_post.create_time DESC
        LIMIT #{pageNo}, #{pageSize}
    </select>
</mapper>
```

```xml
<!-- PostTagMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- PostTagMapper.xml -->
<mapper namespace="com.example.mapper.PostTagMapper">
    <select id="getTagIdsByTopicId" resultType="java.lang.String">
        SELECT tag_id FROM bms_post_tag WHERE topic_id = #{topicId}
    </select>
</mapper>
```

```xml
<!-- TagMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.mapper.TagMapper">
    <select id="getTagsByIds" resultType="com.example.entity.BmsTag">
        SELECT *
        FROM bms_tag
        WHERE id IN
        <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </select>
</mapper>
```