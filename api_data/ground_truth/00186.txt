```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private T data;
}

```
```java
// OmsOrder.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.math.BigDecimal;
import java.sql.Timestamp;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class OmsOrder {
    private Long id;
    private Long memberId;
    private Long couponId;
    private String orderSn;
    private Timestamp createTime;
    private String memberUsername;
    private BigDecimal totalAmount;
    private BigDecimal payAmount;
    private BigDecimal freightAmount;
    private BigDecimal promotionAmount;
    private BigDecimal integrationAmount;
    private BigDecimal couponAmount;
    private BigDecimal discountAmount;
    private Integer payType;
    private Integer sourceType;
    private Integer status;
    private Integer orderType;
    private String deliveryCompany;
    private String deliverySn;
    private Integer autoConfirmDay;
    private Integer integration;
    private Integer growth;
    private String promotionInfo;
    private Integer billType;
    private String billHeader;
    private String billContent;
    private String billReceiverPhone;
    private String billReceiverEmail;
    private String receiverName;
    private String receiverPhone;
    private String receiverPostCode;
    private String receiverProvince;
    private String receiverCity;
    private String receiverRegion;
    private String receiverDetailAddress;
    private String note;
    private Integer confirmStatus;
    private Integer deleteStatus;
    private Integer useIntegration;
    private Timestamp paymentTime;
    private Timestamp deliveryTime;
    private Timestamp receiveTime;
    private Timestamp commentTime;
    private Timestamp modifyTime;
}```
```java
// OmsOrderOperateHistory.java
package com.example.entity;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.sql.Timestamp;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class OmsOrderOperateHistory {
    private Long id;
    private Long orderId;
    private String operateMan;
    private Timestamp createTime;
    private Integer orderStatus;
    private String note;
}```
```java
// UpdateMoneyInfoRequest.java
package com.example.entity;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UpdateMoneyInfoRequest {
    private Long orderId;
    private BigDecimal freightAmount;
    private BigDecimal discountAmount;
    private Integer status;
}```

```java
// OrderService.java
package com.example.service;

import com.example.entity.OmsOrderOperateHistory;
import com.example.mapper.OmsOrderMapper;
import com.example.mapper.OmsOrderOperateHistoryMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.math.BigDecimal;
import java.sql.Timestamp;

@Service
public class OrderService {
    private final OmsOrderMapper orderMapper;
    private final OmsOrderOperateHistoryMapper historyMapper;

    @Autowired
    public OrderService(OmsOrderMapper orderMapper, OmsOrderOperateHistoryMapper historyMapper) {
        this.orderMapper = orderMapper;
        this.historyMapper = historyMapper;
    }

    @Transactional
    public int updateMoneyInfo(Long orderId, BigDecimal freightAmount, BigDecimal discountAmount, Integer status) {
        int count = orderMapper.updateMoneyInfo(orderId, freightAmount, discountAmount, status);
        if (count > 0) {
            OmsOrderOperateHistory history = new OmsOrderOperateHistory();
            history.setOrderId(orderId);
            history.setOperateMan("后台管理员");
            history.setCreateTime(new Timestamp(System.currentTimeMillis()));
            history.setOrderStatus(status);
            history.setNote("修改费用信息");
            historyMapper.insert(history);
        }
        return count;
    }
}
```


```java
// OrderController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.service.OrderService;
import com.example.entity.UpdateMoneyInfoRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/order")
public class OrderController {
    private final OrderService orderService;

    @Autowired
    public OrderController(OrderService orderService) {
        this.orderService = orderService;
    }

    @PostMapping("/update/moneyInfo")
    public ApiResponse<Integer> updateMoneyInfo(@RequestBody UpdateMoneyInfoRequest request) {
        int count = orderService.updateMoneyInfo(request.getOrderId(), request.getFreightAmount(), request.getDiscountAmount(), request.getStatus());
        return new ApiResponse<>(count);
    }
}
```

```java
// OmsOrderMapper.java
package com.example.mapper;

import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;

public interface OmsOrderMapper {
    int updateMoneyInfo(@Param("orderId") Long orderId, @Param("freightAmount") BigDecimal freightAmount, @Param("discountAmount") BigDecimal discountAmount, @Param("status") Integer status);
}
```
```java
// OmsOrderOperateHistoryMapper.java
package com.example.mapper;

import com.example.entity.OmsOrderOperateHistory;

public interface OmsOrderOperateHistoryMapper {
    int insert(OmsOrderOperateHistory history);
}
```

```xml
<!-- OmsOrderOperateHistoryMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- OmsOrderOperateHistoryMapper.xml -->
<mapper namespace="com.example.mapper.OmsOrderOperateHistoryMapper">
    <insert id="insert">
        INSERT INTO oms_order_operate_history (order_id, operate_man, create_time, order_status, note)
        VALUES (#{orderId}, '后台管理员', CURRENT_TIMESTAMP, #{orderStatus}, '修改费用信息')
    </insert>
</mapper>
```

