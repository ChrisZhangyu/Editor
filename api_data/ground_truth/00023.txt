```java
// ApiResponse.java

package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.sql.Timestamp;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private Long id;
    private Long categoryId;
    private String title;
    private String pic;
    private Integer productCount;
    private Integer recommendStatus;
    private Timestamp createTime;
    private Integer collectCount;
    private Integer readCount;
    private Integer commentCount;
    private String albumPics;
    private String description;
    private Integer showStatus;
    private Integer forwardCount;
    private String categoryName;
}



```
```java
// SubjectListRequest.java
package com.example.entity;

import lombok.Data;

@Data
public class SubjectListRequest {
    private String keyword;
    private Integer pageNum;
    private Integer pageSize;
}
```
```java
// SubjectResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class SubjectResponse {
    private Long id;
    private Long categoryId;
    private String title;
    private String pic;
    private Integer productCount;
    private Integer recommendStatus;
    private Date createTime;
    private Integer collectCount;
    private Integer readCount;
    private Integer commentCount;
    private String albumPics;
    private String description;
    private Integer showStatus;
    private Integer forwardCount;
    private String categoryName;
    private String content;
}

```

```java
// SubjectService.java

package com.example.service;

import com.example.entity.ApiResponse;
import com.example.entity.SubjectListRequest;
import com.example.entity.SubjectResponse;


import java.util.List;

public interface SubjectService {
    List<ApiResponse> getSubjectList(SubjectListRequest request);
}
```

```java
// SubjectServiceImpl.java

package com.example.service.impl;

import com.example.entity.ApiResponse;
import com.example.entity.SubjectListRequest;
import com.example.service.SubjectService;
import com.example.mapper.SubjectMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class SubjectServiceImpl implements SubjectService {
    @Autowired
    private SubjectMapper subjectMapper;

    @Override
    public List<ApiResponse> getSubjectList(SubjectListRequest request) {
        // 根据关键字进行分页查询
        if (request.getKeyword() == null || "".equals(request.getKeyword())) {
            return null;
        }
        List<ApiResponse> subjectList = subjectMapper.getSubjectList(request.getKeyword(), request.getPageNum(), request.getPageSize());
        return subjectList;
    }
}
```

```java
// SubjectController.java

package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.SubjectListRequest;
import com.example.service.SubjectService;
import com.example.entity.SubjectResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/subject")
public class SubjectController {
    @Autowired
    private SubjectService subjectService;

    @GetMapping("/list")
    public List<ApiResponse> getSubjectList(SubjectListRequest request) {
        return subjectService.getSubjectList(request);
    }
}
```

```java
// SubjectMapper.java

package com.example.mapper;

import com.example.entity.ApiResponse;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface SubjectMapper {
    List<ApiResponse> getSubjectList(@Param("keyword") String keyword, @Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
}
```

```xml
<!-- SubjectMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.SubjectMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.ApiResponse">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="category_id" jdbcType="BIGINT" property="categoryId" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="pic" jdbcType="VARCHAR" property="pic" />
        <result column="product_count" jdbcType="INTEGER" property="productCount" />
        <result column="recommend_status" jdbcType="INTEGER" property="recommendStatus" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="collect_count" jdbcType="INTEGER" property="collectCount" />
        <result column="read_count" jdbcType="INTEGER" property="readCount" />
        <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
        <result column="album_pics" jdbcType="VARCHAR" property="albumPics" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="show_status" jdbcType="INTEGER" property="showStatus" />
        <result column="forward_count" jdbcType="INTEGER" property="forwardCount" />
        <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    </resultMap>

    <select id="getSubjectList" resultMap="BaseResultMap">
        SELECT id, category_id, title, pic, product_count, recommend_status, create_time, collect_count, read_count, comment_count, album_pics, description, show_status, forward_count, category_name
        FROM cms_subject
        WHERE title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY create_time DESC
        LIMIT #{pageNum}, #{pageSize}
    </select>
</mapper>

```

