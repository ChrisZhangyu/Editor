```java
// Book.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Book {
    private Long bookId;
    private String name;
    private Integer number;
}
```

```java
// BookService.java
package com.example.service;

import com.example.entity.Book;

import com.example.entity.Book;
import java.util.List;

public interface BookService {
    List<Book> getBookList(Integer offset, Integer limit);
}
```

```java
// BookServiceImpl.java
package com.example.service.impl;

import com.example.service.BookService;
import com.example.entity.Book;
import com.example.mapper.BookMapper;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;

@Service
public class BookServiceImpl implements BookService {
    private final BookMapper bookMapper;

    @Autowired
    public BookServiceImpl(BookMapper bookMapper) {
        this.bookMapper = bookMapper;
    }

    @Override
    public List<Book> getBookList(Integer offset, Integer limit) {
        if (offset < 0 || limit < 0) {
            throw new IllegalArgumentException("参数不能小于0！");
        }
        return bookMapper.getBookList(offset, limit);
    }
}
```

```java
// BookController.java
package com.example.controller;

import com.example.service.BookService;
import com.example.entity.Book;

import com.example.entity.Book;
import com.example.service.BookService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import java.util.List;

@RestController
public class BookController {
    private final BookService bookService;

    @Autowired
    public BookController(BookService bookService) {
        this.bookService = bookService;
    }

    @GetMapping("/book/list")
    public List<Book> getBookList(@RequestParam("offset") Integer offset, @RequestParam("limit") Integer limit) {
        return bookService.getBookList(offset, limit);
    }
}
```

```java
// BookMapper.java
package com.example.mapper;

import com.example.entity.Book;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import java.util.List;

@Mapper
public interface BookMapper {
    List<Book> getBookList(@Param("offset") Integer offset, @Param("limit") Integer limit);
}
```

```xml
<!-- BookMapper.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BookMapper">
    <resultMap type="com.example.entity.Book" id="BookResult">
        <result property="bookId" column="book_id"/>
        <result property="name" column="name"/>
        <result property="number" column="number"/>
    </resultMap>
    <select id="getBookList" resultMap="BookResult">
        SELECT * FROM book LIMIT #{offset}, #{limit}
    </select>
</mapper>

```
