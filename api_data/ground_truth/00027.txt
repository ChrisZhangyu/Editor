```java
// ApiResponse.java

package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private Long id;
    private Long productId;
    private String skuCode;
    private Double price;
    private Integer stock;
    private Integer lowStock;
    private String pic;
    private Integer sale;
    private Double promotionPrice;
    private Integer lockStock;
    private String spData;
}```
```java
// PmsSkuStock.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PmsSkuStock {
    /**
     * 主键ID
     */
    private Long id;

    /**
     * 商品ID
     */
    private Long productId;

    /**
     * SKU编码
     */
    private String skuCode;

    /**
     * 价格
     */
    private BigDecimal price;

    /**
     * 库存
     */
    private Integer stock;

    /**
     * 低库存预警值
     */
    private Integer lowStock;

    /**
     * 图片
     */
    private String pic;

    /**
     * 销量
     */
    private Integer sale;

    /**
     * 促销价格
     */
    private BigDecimal promotionPrice;

    /**
     * 锁定库存
     */
    private Integer lockStock;

    /**
     * 商品规格数据
     */
    private String spData;
}```
```java
// SkuSearchRequest.java
package com.example.entity;

import lombok.Data;

@Data
public class SkuSearchRequest {
    private String pid;
    private String keyword;
    private String orderByClause = "id ASC";
}```

```java
// SkuService.java

package com.example.service;

import com.example.entity.ApiResponse;

import java.util.List;

public interface SkuService {
    List<ApiResponse> searchSku(String pid, String keyword);
}
```

```java
// SkuServiceImpl.java

package com.example.service.impl;

import com.example.entity.SkuSearchRequest;
import com.example.service.SkuService;
import com.example.entity.ApiResponse;
import com.example.mapper.SkuMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class SkuServiceImpl implements SkuService {
    @Autowired
    private SkuMapper skuMapper;

    @Override
    public List<ApiResponse> searchSku(String pid, String keyword) {
        // 构建查询条件
        SkuSearchRequest request = new SkuSearchRequest();
        request.setPid(pid);
        request.setKeyword(keyword);

        // 调用Mapper查询数据
        List<ApiResponse> response = skuMapper.selectByExample(request);

        return response;
    }
}
```

```java
// SkuController.java

package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.service.SkuService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/sku")
public class SkuController {
    @Autowired
    private SkuService skuService;

    @GetMapping("/{pid}")
    public List<ApiResponse> searchSku(@PathVariable String pid, @RequestParam String keyword) {
        return skuService.searchSku(pid, keyword);
    }
}
```

```java
// SkuMapper.java

package com.example.mapper;


import com.example.entity.ApiResponse;
import com.example.entity.SkuSearchRequest;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface SkuMapper {
    List<ApiResponse> selectByExample(SkuSearchRequest request);
}
```

```xml
<!-- SkuMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- skuMapper.xml -->
<mapper namespace="com.example.mapper.SkuMapper">
    <!-- 根据商品编号和关键字模糊搜索SKU库存 -->
    <resultMap id="BaseResultMap" type="com.example.entity.ApiResponse">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="product_id" jdbcType="BIGINT" property="productId" />
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="stock" jdbcType="INTEGER" property="stock" />
        <result column="low_stock" jdbcType="INTEGER" property="lowStock" />
        <result column="pic" jdbcType="VARCHAR" property="pic" />
        <result column="sale" jdbcType="INTEGER" property="sale" />
        <result column="promotion_price" jdbcType="DECIMAL" property="promotionPrice" />
        <result column="lock_stock" jdbcType="INTEGER" property="lockStock" />
        <result column="sp_data" jdbcType="VARCHAR" property="spData" />
    </resultMap>
    <sql id="Base_Column_List">
        id, product_id, sku_code, price, stock, low_stock, pic, sale, promotion_price, lock_stock,
        sp_data
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM pms_sku_stock
        <if test="pid != null">
            WHERE product_id = #{pid}
        </if>
        <if test="keyword != null">
            AND sku_code LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
        </if>
    </select>
</mapper>

```

