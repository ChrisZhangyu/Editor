
```java
// Book.java

package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Book {
    private int id;
    private String isbn;
    private String path;
    private String title;
    private String subtitle;
    private String originalTitle;
    private double marketPrice;
    private String intro;
    private String binding;
    private int pages;
    private String author;
    private String publisher;
    private String catalog;
    private int supply;
    private int status;
    private int hot;
    private String indate;
}





```
```java
// Store.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Store {
    private Long id;
    private String category;
    private String number;
    private String level;
    private String page;
    private Integer status;
    private List<Book> books;
}```
```java
// StoreListResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class StoreListResponse {
    private List<Store> stores;
    private String total;
}```

```java
// StoreService.java

package com.example.service;


import com.example.entity.StoreListResponse;

public interface StoreService {
    StoreListResponse getStoreList(Integer page, Integer rows, Integer status, String number);
}
```

```java
// StoreServiceImpl.java

package com.example.service.impl;

import com.example.entity.StoreListResponse;
import com.example.service.StoreService;
import com.example.entity.Store;
import com.example.mapper.StoreMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class StoreServiceImpl implements StoreService {

    private final StoreMapper storeMapper;

    @Autowired
    public StoreServiceImpl(StoreMapper storeMapper) {
        this.storeMapper = storeMapper;
    }

    @Override
    public StoreListResponse getStoreList(Integer page, Integer rows, Integer status, String number) {
        List<Store> stores = storeMapper.getStoreList(page, rows, status, number);
        String total = String.valueOf(stores.size());
        return new StoreListResponse(stores, total);
    }
}
```

```java
// StoreController.java

package com.example.controller;

import com.example.entity.StoreListResponse;
import com.example.service.StoreService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class StoreController {

    private final StoreService storeService;

    @Autowired
    public StoreController(StoreService storeService) {
        this.storeService = storeService;
    }

    @GetMapping("/store/list")
    public StoreListResponse getStoreList(@RequestParam Integer page, @RequestParam Integer rows, @RequestParam Integer status, @RequestParam String number) {
        return storeService.getStoreList(page, rows, status, number);
    }
}
```

```java
// StoreMapper.java

package com.example.mapper;

import com.example.entity.Store;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface StoreMapper {
    List<Store> getStoreList(@Param("page") Integer page, @Param("rows") Integer rows, @Param("status") Integer status, @Param("number") String number);
}
```

```xml
<!-- StoreMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.StoreMapper">
    <select id="getStoreList" resultType="com.example.entity.Store">
        SELECT s.id, s.category, s.number, s.level, s.page, s.status,
        b.id AS book_id, b.isbn, b.path, b.title, b.subtitle, b.originalTitle, b.marketPrice, b.intro, b.binding, b.pages, b.author, b.publisher, b.catalog, b.supply, b.status AS book_status, b.hot, b.indate
        FROM ssm_store s
        LEFT JOIN ssm_book b ON s.id = b.id
        WHERE s.status = #{status}
        AND s.number = #{number}
        LIMIT #{page}, #{rows}
    </select>
</mapper>

```