```java
// Picture.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Picture {
    private int id;
    private String path;
    private int type;
    private String time;
    private String url;
    private int grade;
}
```

```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object response;
}
```

```java
// PictureRequest.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PictureRequest {
    private String id;
    private String path;
    private String type;
    private String time;
    private String url;
    private String grade;
}
```

```java
// PictureService.java
package com.example.service;

import com.example.entity.ApiResponse;
import com.example.entity.Picture;
import com.example.entity.PictureRequest;

public interface PictureService {
    ApiResponse savePicture(PictureRequest request);
}

```

```java
// PictureServiceImpl.java
package com.example.service.impl;

import com.example.entity.ApiResponse;
import com.example.entity.Picture;
import com.example.entity.PictureRequest;
import com.example.mapper.PictureMapper;
import com.example.service.PictureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

@Service
public class PictureServiceImpl implements PictureService {

    private final PictureMapper pictureMapper;

    @Autowired
    public PictureServiceImpl(PictureMapper pictureMapper) {
        this.pictureMapper = pictureMapper;
    }

    @Override
    public ApiResponse savePicture(PictureRequest request) {
        // 如果参数id为空，则time设置为当前日期的字符串表示形式，进行插入操作
        if (request.getId() == null || request.getId().isEmpty()) {
            request.setTime(getCurrentDateString());
            if (request.getPath() == null || pictureMapper.getArticleCount() > 90 || request.getPath().length() > 100 || request.getUrl().length() > 100) {
                return new ApiResponse(0, "失败", null);
            }
            else {
                pictureMapper.insertPicture(request);
            }
        } else {
            // 如果不为空，则进行更新操作
            System.out.print(pictureMapper.getArticleCount());
            if (request.getPath() == null || pictureMapper.getArticleCount() > 90 || request.getPath().length() > 100 || request.getUrl().length() > 100) {
                return new ApiResponse(0, "失败", null);
            }
            else {
                Picture picture = new Picture();
                // 更新属性
                picture.setId(Integer.parseInt(request.getId()));
                picture.setPath(request.getPath());
                picture.setType(Integer.parseInt(request.getType()));
                picture.setTime(request.getTime());
                picture.setUrl(request.getUrl());
                picture.setGrade(Integer.parseInt(request.getGrade()));
                pictureMapper.updatePicture(picture);
            }
        }
        return new ApiResponse(1, "成功", null);
    }

    private String getCurrentDateString() {
        // 获取当前日期的字符串表示形式
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        return sdf.format(date);
    }
}
```

```java
// PictureController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.PictureRequest;
import com.example.service.PictureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/picture")
public class PictureController {

    private final PictureService pictureService;

    @Autowired
    public PictureController(PictureService pictureService) {
        this.pictureService = pictureService;
    }

    @PostMapping("/save")
    public ResponseEntity<ApiResponse> savePicture(@RequestBody PictureRequest request) {
        ApiResponse response = pictureService.savePicture(request);
        return new ResponseEntity<>(response, HttpStatus.OK);
    }
}
```

```java
// PictureMapper.java
package com.example.mapper;

import com.example.entity.Picture;
import com.example.entity.PictureRequest;

public interface PictureMapper {
    void insertPicture(PictureRequest request);
    int getArticleCount();
    void updatePicture(Picture picture);
}
```

```xml
<!-- PictureMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.PictureMapper">

    <insert id="insertPicture" parameterType="com.example.entity.PictureRequest">
        insert into ssm_picture(path,type,time,url,grade)
        values(#{path},#{type},#{time},#{url},#{grade})
    </insert>

    <select id="getArticleCount" resultType="int">
        SELECT COUNT(*) FROM ssm_picture
    </select>

    <update id="updatePicture" parameterType="com.example.entity.Picture">
        update ssm_picture
        set
        path=#{path},url=#{url},type=#{type},time=#{time},
        grade=#{grade}
        where id=#{id}
    </update>

</mapper>
```