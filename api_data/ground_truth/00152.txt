
```java
// User.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {
    private Integer id;
    private String userUuid;
    private String userName;
    private String password;
    private String realName;
    private Integer age;
    private Integer sex;
    private Date birthDay;
    private Integer userLevel;
    private String phone;
    private Integer role;
    private Integer status;
    private String imagePath;
    private Date createTime;
    private Date modifyTime;
    private Date lastActiveTime;
    private Boolean deleted;
    private String wxOpenId;
}
```
```java
// UserPageListRequest.java
package com.example.entity;



import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UserPageListRequest {
    private String userName;
    private Integer role;
    private Integer pageIndex;
    private Integer pageSize;
}
```
```java
// UserPageListResponse.java
package com.example.entity;



import com.example.entity.User;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UserPageListResponse {
    private Integer code;
    private String message;
    private UserPageListData response;

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class UserPageListData {
        private Integer total;
        private List<User> list;
    }
}
```

```java
// UserService.java
package com.example.service;

import com.example.entity.UserPageListRequest;
import com.example.entity.UserPageListResponse;

public interface UserService {
    UserPageListResponse getUserPageList(UserPageListRequest request);
}
```

```java
// UserServiceImpl.java
package com.example.service.impl;

import com.example.service.UserService;
import com.example.entity.User;
import com.example.entity.UserPageListRequest;
import com.example.mapper.UserMapper;
import com.example.entity.UserPageListResponse;

import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class UserServiceImpl implements UserService {
    private final UserMapper userMapper;

    public UserServiceImpl(UserMapper userMapper) {
        this.userMapper = userMapper;
    }

    @Override
    public UserPageListResponse getUserPageList(UserPageListRequest request) {
        UserPageListResponse response = new UserPageListResponse();
        try {
            Integer total = userMapper.getUserCount(request.getUserName(), request.getRole());
            List<User> userList = userMapper.getUserPageList(request.getUserName(), request.getRole(), request.getPageIndex(), request.getPageSize());
            UserPageListResponse.UserPageListData data = new UserPageListResponse.UserPageListData(total, userList);
            response.setCode(1);
            response.setMessage("成功");
            response.setResponse(data);
        } catch (Exception e) {
            response.setCode(-1);
            response.setMessage("用户信息检索失败");
        }
        return response;
    }
}
```

```java
// UserController.java
package com.example.controller;

import com.example.service.UserService;
import com.example.entity.UserPageListRequest;
import com.example.entity.UserPageListResponse;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/admin/user")
public class UserController {
    private final UserService userService;

    public UserController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping("/page/list")
    public UserPageListResponse getUserPageList(@RequestBody UserPageListRequest request) {
        return userService.getUserPageList(request);
    }
}
```

```java
// UserMapper.java
package com.example.mapper;

import com.example.entity.User;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface UserMapper {
    Integer getUserCount(@Param("userName") String userName, @Param("role") Integer role);

    List<User> getUserPageList(@Param("userName") String userName, @Param("role") Integer role, @Param("pageIndex") Integer pageIndex, @Param("pageSize") Integer pageSize);
}
```

```xml
<!-- UserMapper.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <resultMap id="UserResultMap" type="com.example.entity.User">
        <id property="id" column="id"/>
        <result property="userUuid" column="user_uuid"/>
        <result property="userName" column="user_name"/>
        <result property="realName" column="real_name"/>
        <result property="password" column="password"/>
        <result property="realName" column="real_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="birthDay" column="birth_day"/>
        <result property="userLevel" column="user_level"/>
        <result property="phone" column="phone"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="imagePath" column="image_path"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="lastActiveTime" column="last_active_time"/>
        <result property="deleted" column="deleted"/>
        <result property="wxOpenId" column="wx_open_id"/>
    </resultMap>

    <select id="getUserCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_user
        <where>
            <if test="userName != null and userName != ''">
                AND user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
        </where>
    </select>

    <select id="getUserPageList" resultType="com.example.entity.User" resultMap="UserResultMap">
        SELECT * FROM t_user
        <where>
            <if test="userName != null and userName != ''">
                AND user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
            <if test="role != null">
                AND role = #{role}
            </if>
        </where>
        LIMIT #{pageIndex}, #{pageSize}
    </select>

</mapper>

```