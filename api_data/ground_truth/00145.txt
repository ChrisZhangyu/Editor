```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object data;
}
```

```java
// CategorySecond.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "tb_category_second")
public class CategorySecond {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "category_second_id")
    private Integer categorySecondId;

    @Column(name = "category_first_id")
    private Integer categoryFirstId;

    @Column(name = "category_name", length = 10)
    private String categoryName;

    @Column(name = "image", length = 100)
    private String image;
}
```

```java
// CategorySecondService.java
package com.example.service;

import com.example.entity.ApiResponse;
import com.example.entity.CategorySecond;

import java.util.List;

public interface CategorySecondService {
    ApiResponse updateCategorySecond(int categorySecondId, int categoryFirstId, String categoryName, String image);
}
```

```java
// CategorySecondServiceImpl.java
package com.example.service.impl;

import com.example.entity.ApiResponse;
import com.example.entity.CategorySecond;
import com.example.mapper.CategorySecondMapper;
import com.example.service.CategorySecondService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class CategorySecondServiceImpl implements CategorySecondService {

    private final CategorySecondMapper categorySecondMapper;

    @Autowired
    public CategorySecondServiceImpl(CategorySecondMapper categorySecondMapper) {
        this.categorySecondMapper = categorySecondMapper;
    }

    @Override
    public ApiResponse updateCategorySecond(int categorySecondId, int categoryFirstId, String categoryName, String image) {
        CategorySecond existingCategorySecond = categorySecondMapper.getCategorySecondById(categorySecondId);
        if (existingCategorySecond == null) {
            return new ApiResponse(-1002, "该分类不存在", null);
        }

        CategorySecond categorySecondWithSameName = categorySecondMapper.getCategorySecondByName(categoryName);
        if (categorySecondWithSameName != null && categorySecondWithSameName.getCategorySecondId() != categorySecondId) {
            return new ApiResponse(-1005, "分类名称已存在", null);
        }

        CategorySecond updatedCategorySecond = new CategorySecond();
        updatedCategorySecond.setCategorySecondId(categorySecondId);
        updatedCategorySecond.setCategoryFirstId(categoryFirstId);
        updatedCategorySecond.setCategoryName(categoryName);
        updatedCategorySecond.setImage(image);

        categorySecondMapper.updateCategorySecond(updatedCategorySecond);

        return new ApiResponse(100, "成功", updatedCategorySecond);
    }
}
```

```java
// CategorySecondController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.CategorySecond;
import com.example.service.CategorySecondService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/admin/v1/category/second")
public class CategorySecondController {

    private final CategorySecondService categorySecondService;

    @Autowired
    public CategorySecondController(CategorySecondService categorySecondService) {
        this.categorySecondService = categorySecondService;
    }

    @PostMapping("/{categorySecondId}")
    public ApiResponse updateCategorySecond(@PathVariable int categorySecondId,
                                            @RequestParam int categoryFirstId,
                                            @RequestParam String categoryName,
                                            @RequestParam String image) {
        return categorySecondService.updateCategorySecond(categorySecondId, categoryFirstId, categoryName, image);
    }
}
```

```java
// CategorySecondMapper.java
package com.example.mapper;

import com.example.entity.CategorySecond;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface CategorySecondMapper {
    CategorySecond getCategorySecondById(int categorySecondId);
    List<CategorySecond> getAllCategorySeconds();
    CategorySecond getCategorySecondByName(String categoryName);
    void updateCategorySecond(CategorySecond categorySecond);
}
```

```xml
<!-- CategorySecondMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.CategorySecondMapper">

    <select id="getCategorySecondById" resultType="com.example.entity.CategorySecond">
        SELECT * FROM tb_category_second WHERE category_second_id = #{categorySecondId}
    </select>

    <select id="getAllCategorySeconds" resultType="com.example.entity.CategorySecond">
        SELECT * FROM tb_category_second
    </select>

    <select id="getCategorySecondByName" resultType="com.example.entity.CategorySecond">
        SELECT * FROM tb_category_second WHERE category_name = #{categoryName}
    </select>

    <update id="updateCategorySecond">
        UPDATE tb_category_second
        SET category_first_id = #{categoryFirstId},
            category_name = #{categoryName},
            image = #{image}
        WHERE category_second_id = #{categorySecondId}
    </update>

</mapper>

```