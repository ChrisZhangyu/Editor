```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object response;
}

```
```java
// LoginRequest.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class LoginRequest {
    private String userName;
    private String password;
    private String code;
}

```
```java
// User.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {
    private int id;
    private String userUuid;
    private String userName;
    private String password;
    private String realName;
    private int age;
    private int sex;
    private Date birthDay;
    private int userLevel;
    private String phone;
    private int role;
    private int status;
    private String imagePath;
    private Date createTime;
    private Date modifyTime;
    private Date lastActiveTime;
    private boolean deleted;
    private String wxOpenId;
}


```
```java
// UserToken.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UserToken {
    private int id;
    private String token;
    private int userId;
    private String wxOpenId;
    private Date createTime;
    private Date endTime;
    private String userName;
}
```

```java
// UserService.java
package com.example.service;

import com.example.entity.ApiResponse;
import com.example.entity.LoginRequest;
import com.example.entity.UserToken;
import com.example.mapper.UserMapper;
import com.example.entity.User;

import com.example.mapper.UserTokenMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.Date;

@Service
public class UserService {
    private final UserMapper userMapper;
    private final UserTokenMapper userTokenMapper;

    @Autowired
    public UserService(UserMapper userMapper, UserTokenMapper userTokenMapper) {
        this.userMapper = userMapper;
        this.userTokenMapper = userTokenMapper;
    }

    @Transactional
    public ApiResponse login(LoginRequest request) {
        User user = userMapper.findByUserName(request.getUserName());
        if (user == null) {
            return new ApiResponse(2, "用户名或密码错误", null);
        }

        if (!user.getPassword().equals(request.getPassword())) {
            return new ApiResponse(2, "用户名或密码错误", null);
        }

        if (user.getStatus() == 2) {
            return new ApiResponse(3, "用户被禁用", null);
        }

        if (!user.getWxOpenId().equals(request.getCode())) {
            return new ApiResponse(4, "获取微信OpenId失败", null);
        }

        user.setModifyTime(new Date());
        userMapper.updateModifyTime(user);

        UserToken userToken = new UserToken();
        userToken.setToken(generateToken());
        userToken.setUserId(user.getId());
        userToken.setWxOpenId(user.getWxOpenId());
        userToken.setCreateTime(new Date());
        userToken.setEndTime(new Date());
        userToken.setUserName(user.getUserName());
        userTokenMapper.insert(userToken);

        return new ApiResponse(1, "成功", null);
    }

    private String generateToken() {
        // 生成token的逻辑
        return "";
    }
}
```


```java
// UserController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.LoginRequest;
import com.example.service.UserService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/wx/student/auth")
public class UserController {
    private final UserService userService;

    @Autowired
    public UserController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping("/bind")
    public ApiResponse login(@RequestBody LoginRequest request) {
        return userService.login(request);
    }
}
```

```java
// UserMapper.java
package com.example.mapper;

import com.example.entity.User;

import com.example.entity.UserToken;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface UserMapper {
    User findByUserName(@Param("userName") String userName);
    void updateModifyTime(User user);
}


```
```java
// UserTokenMapper.java
package com.example.mapper;

import com.example.entity.UserToken;
import org.apache.ibatis.annotations.Mapper;

@Mapper
public interface UserTokenMapper {
    void insert(UserToken userToken);
}
```

```xml
<!-- UserTokenMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserTokenMapper">
    <insert id="insert">
        INSERT INTO t_user_token (token, user_id, wx_open_id, create_time, end_time, user_name)
        VALUES (#{token}, #{userId}, #{wxOpenId}, #{createTime}, #{endTime}, #{userName})
    </insert>
</mapper>

```

