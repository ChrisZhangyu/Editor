```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T data;
}
```

```java
// BmsTag.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "bms_tag")
public class BmsTag {
    @Id
    @Column(name = "id", length = 20)
    private String id;

    @Column(name = "name")
    private String name;

    @Column(name = "topic_count")
    private int topicCount;
}
```

```java
// PostVO.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PostVO {
    private String id;
    private String userId;
    private String avatar;
    private String alias;
    private String username;
    private String title;
    private int comments;
    private boolean top;
    private boolean essence;
    private int collects;
    private List<BmsTag> tags;
    private int view;
    private String createTime;
    private String modifyTime;
}
```

```java
// PostService.java
package com.example.service;

import com.example.entity.PostVO;

import java.util.List;

public interface PostService {
    List<PostVO> searchPosts(String keyword, int pageNum, int pageSize);
}
```

```java
// PostServiceImpl.java
package com.example.service.impl;

import com.example.entity.BmsTag;
import com.example.entity.PostVO;
import com.example.mapper.PostMapper;
import com.example.mapper.PostTagMapper;
import com.example.mapper.TagMapper;
import com.example.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class PostServiceImpl implements PostService {

    private final PostMapper postMapper;
    private final PostTagMapper postTagMapper;
    private final TagMapper tagMapper;

    @Autowired
    public PostServiceImpl(PostMapper postMapper, PostTagMapper postTagMapper, TagMapper tagMapper) {
        this.postMapper = postMapper;
        this.postTagMapper = postTagMapper;
        this.tagMapper = tagMapper;
    }

    @Override
    public List<PostVO> searchPosts(String keyword, int pageNum, int pageSize) {
        List<PostVO> postList = postMapper.searchPosts(keyword, pageNum, pageSize);
        for (PostVO post : postList) {
            List<String> tagIds = postTagMapper.getTagIdsByTopicId(post.getId());
            if (!tagIds.isEmpty()) {
                List<BmsTag> tags = tagMapper.getTagsByIds(tagIds);
                post.setTags(tags);
            }
        }
        return postList;
    }
}
```

```java
// PostController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.PostVO;
import com.example.service.PostService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class PostController {

    private final PostService postService;

    @Autowired
    public PostController(PostService postService) {
        this.postService = postService;
    }

    @GetMapping("/search")
    public ApiResponse<List<PostVO>> searchPosts(@RequestParam(required = false) String keyword,
                                                 @RequestParam(defaultValue = "0") int pageNum,
                                                 @RequestParam(defaultValue = "0") int pageSize) {
        int offset = (pageNum - 1) * pageSize;
        int row_count = pageSize;
        List<PostVO> postList = postService.searchPosts(keyword, offset, row_count);
        return new ApiResponse<>(200, "操作成功", postList);
    }
}
```

```java
// PostMapper.java
package com.example.mapper;

import com.example.entity.PostVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface PostMapper {
    List<PostVO> searchPosts(@Param("keyword") String keyword, @Param("pageNum") int pageNum, @Param("pageSize") int pageSize);
}
```

```java
// PostTagMapper.java
package com.example.mapper;

import org.apache.ibatis.annotations.Mapper;

import java.util.List;
@Mapper
public interface PostTagMapper {
    List<String> getTagIdsByTopicId(String topicId);
}
```

```java
// TagMapper.java
package com.example.mapper;

import com.example.entity.BmsTag;
import org.apache.ibatis.annotations.Mapper;

import java.util.List;

@Mapper
public interface TagMapper {
    List<BmsTag> getTagsByIds(List<String> tagIds);
}
```

```xml
<!-- PostMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- PostMapper.xml -->
<mapper namespace="com.example.mapper.PostMapper">
    <select id="searchPosts" parameterType="map" resultType="com.example.entity.PostVO">
        SELECT bms_post.id, bms_post.title, bms_post.comments, bms_post.top, bms_post.essence, bms_post.collects, bms_post.view, bms_post.create_time, bms_post.modify_time,
        ums_user.id AS userId, ums_user.avatar, ums_user.alias, ums_user.username
        FROM bms_post
        LEFT JOIN ums_user ON bms_post.user_id = ums_user.id
        WHERE bms_post.title LIKE CONCAT('%', #{keyword}, '%') OR bms_post.title LIKE CONCAT(#{keyword}, '%') OR bms_post.title LIKE CONCAT('%', #{keyword})
        ORDER BY bms_post.view DESC, bms_post.create_time DESC
        LIMIT #{pageNum}, #{pageSize}
    </select>
</mapper>
```

```xml
<!-- PostTagMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- PostTagMapper.xml -->
<mapper namespace="com.example.mapper.PostTagMapper">
    <select id="getTagIdsByTopicId" parameterType="String" resultType="String">
        SELECT tag_id FROM bms_post_tag WHERE topic_id = #{topicId}
    </select>
</mapper>
```

```xml
<!-- TagMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- TagMapper.xml -->
<mapper namespace="com.example.mapper.TagMapper">
    <select id="getTagsByIds" parameterType="List" resultType="com.example.entity.BmsTag">
        SELECT * FROM bms_tag WHERE id IN
        <foreach collection="list" item="tagId" open="(" separator="," close=")">
            #{tagId}
        </foreach>
    </select>
</mapper>
```