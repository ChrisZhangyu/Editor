```java
// Picture.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Picture {
    private int id;
    private String path;
    private int type;
    private String time;
    private String url;
    private int grade;
}
```

```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse {
    private int code;
    private String message;
    private Object response;
}
```

```java
// PictureService.java
package com.example.service;

import java.util.List;

public interface PictureService {
    boolean deletePictures(List<Integer> ids);
}
```

```java
// PictureServiceImpl.java
package com.example.service.impl;

import com.example.mapper.PictureMapper;
import com.example.service.PictureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.List;

@Service
public class PictureServiceImpl implements PictureService {

    @Autowired
    private PictureMapper pictureMapper;

    @Override
    public boolean deletePictures(List<Integer> ids) {
        try {
            pictureMapper.deletePictures(ids);
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}
```

```java
// PictureController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.service.PictureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

@RestController
public class PictureController {

    @Autowired
    private PictureService pictureService;

    @PostMapping("/picture/delete")
    public ApiResponse deletePictures(@RequestParam("ids") String ids) {
        try {
            List<Integer> idList = Arrays.stream(ids.split(",")).map(Integer::parseInt).collect(Collectors.toList());
            boolean success = pictureService.deletePictures(idList);
            if (success) {
                return new ApiResponse(1, "成功", null);
            } else {
                return new ApiResponse(0, "失败", null);
            }
        } catch (Exception e) {
            return new ApiResponse(0, "参数错误", null);
        }
    }
}
```

```java
// PictureMapper.java
package com.example.mapper;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface PictureMapper {
    void deletePictures(@Param("ids") List<Integer> ids);
}
```

```xml
<!-- PictureMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.PictureMapper">
    <delete id="deletePictures">
        DELETE FROM ssm_picture WHERE id IN
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
```