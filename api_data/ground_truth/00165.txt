```java
// ApiResponse.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}
```
```java
// ExamPaperAnswer.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ExamPaperAnswer {
    private int id;
    private int examPaperId;
    private String paperName;
    private int paperType;
    private int subjectId;
    private int systemScore;
    private int userScore;
    private int paperScore;
    private int questionCorrect;
    private int questionCount;
    private int doTime;
    private int status;
    private int createUser;
    private Date createTime;
    private int taskExamId;
}
```
```java
// PageListRequest.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PageListRequest {
    private String userName;
    private int pageIndex;
    private int pageSize;
}
```
```java
// PageResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class PageResponse<T> {
    private int total;
    private T list;
}
```
```java
// User.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {
    private int id;
    private String userUuid;
    private String userName;
    private String password;
    private String realName;
    private int age;
    private int sex;
    private Date birthDay;
    private int userLevel;
    private String phone;
    private int role;
    private int status;
    private String imagePath;
    private Date createTime;
    private Date modifyTime;
    private Date lastActiveTime;
    private boolean deleted;
    private String wxOpenId;
}
```

```java
// ExamPaperAnswerService.java
package com.example.service;
import com.example.entity.ApiResponse;
import com.example.entity.ExamPaperAnswer;
import com.example.entity.PageListRequest;

import com.example.entity.PageResponse;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

@Service
public interface ExamPaperAnswerService {
    ApiResponse<PageResponse<ExamPaperAnswer>> getPageList(@RequestBody PageListRequest request);
}
```

```java
// ExamPaperAnswerServiceImpl.java
package com.example.service.impl;

import com.example.entity.*;
import com.example.mapper.ExamPaperAnswerMapper;
import com.example.service.ExamPaperAnswerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class ExamPaperAnswerServiceImpl implements ExamPaperAnswerService{
    private final ExamPaperAnswerMapper examPaperAnswerMapper;

    @Autowired
    public ExamPaperAnswerServiceImpl(ExamPaperAnswerMapper examPaperAnswerMapper){
        this.examPaperAnswerMapper = examPaperAnswerMapper;
    }
    @Override
    public ApiResponse<PageResponse<ExamPaperAnswer>> getPageList(PageListRequest request){
        int userId = examPaperAnswerMapper.getIdByUserName(request.getUserName());
        ExamPaperAnswer examPaperAnswer = examPaperAnswerMapper.getExamPaperAnswer(userId, request);
        int total = examPaperAnswerMapper.getCount();
        return new ApiResponse<>(1, "成功", new PageResponse<>(total, examPaperAnswer));
    }
}
```

```java
// ExamPaperAnswerController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.ExamPaperAnswer;
import com.example.entity.PageListRequest;

import com.example.entity.PageResponse;
import com.example.service.ExamPaperAnswerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/wx/student/exampaper/answer")
public class ExamPaperAnswerController {
    private final ExamPaperAnswerService examPaperAnswerService;

    @Autowired
    public ExamPaperAnswerController(ExamPaperAnswerService examPaperAnswerService){
        this.examPaperAnswerService = examPaperAnswerService;
    }

    @PostMapping("/pageList")
    public ApiResponse<PageResponse<ExamPaperAnswer>> getPageList(@RequestBody PageListRequest request) {
        // TODO: 根据请求参数获取答卷列表数据，并返回ApiResponse对象
        return examPaperAnswerService.getPageList(request);
    }
}
```

```java
// ExamPaperAnswerMapper.java
package com.example.mapper;


import com.example.entity.ExamPaperAnswer;
import com.example.entity.PageListRequest;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface ExamPaperAnswerMapper {
    // TODO: 定义查询答卷列表的方法
    int getIdByUserName(@Param("userName")String userName);

    ExamPaperAnswer getExamPaperAnswer(@Param("userId") int userId,@Param("request")PageListRequest request);

    int getCount();
}
```

```xml
<!-- ExamPaperAnswerMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ExamPaperAnswerMapper">
    <resultMap id="ExamPaperAnswerResultMap" type="com.example.entity.ExamPaperAnswer">
        <id property="id" column="id" />
        <result property="examPaperId" column="exam_paper_id" />
        <result property="paperName" column="paper_name" />
        <result property="paperType" column="paper_type" />
        <result property="subjectId" column="subject_id" />
        <result property="systemScore" column="system_score" />
        <result property="userScore" column="user_score" />
        <result property="paperScore" column="paper_score" />
        <result property="questionCorrect" column="question_correct" />
        <result property="questionCount" column="question_count" />
        <result property="doTime" column="do_time" />
        <result property="status" column="status" />
        <result property="createUser" column="create_user" />
        <result property="createTime" column="create_time" />
        <result property="taskExamId" column="task_exam_id" />
    </resultMap>
    <select id="getIdByUserName" resultType="int">
        SELECT id FROM t_user WHERE user_name = #{userName}
    </select>
    <!-- TODO: 定义查询答卷列表的SQL语句 -->
    <select id="getExamPaperAnswer" resultMap="ExamPaperAnswerResultMap">
        SELECT * FROM t_exam_paper_answer WHERE id = #{userId}
<!--        LIMIT #{request.pageIndex - 1}, #{request.pageSize};-->
    </select>
    <select id="getCount" resultType="int">
        SELECT COUNT(*) FROM t_exam_paper_answer;
    </select>
</mapper>

```

