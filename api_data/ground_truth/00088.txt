```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T data;
}
```

```java
// TbAddress.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "tb_address")
public class TbAddress {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "address_id")
    private Integer addressId;

    @Column(name = "user_id")
    private Integer userId;

    private String consignee;

    private Long phone;

    private String city;

    private String address;

    @Column(name = "street_number")
    private String streetNumber;

    @Column(name = "is_default")
    private Boolean isDefault;
}
```

```java
// TbUser.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "tb_user")
public class TbUser {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_id")
    private Integer userId;

    @Column(name = "user_name", length = 30)
    private String userName;

    @Column(name = "pass_word", length = 30)
    private String passWord;

    private Long phone;

    @Column(length = 6)
    private String sex;

    private String avatar;

    @Column(name = "nick_name", length = 10)
    private String nickName;
}
```

```java
// AddressService.java
package com.example.service;

import com.example.entity.TbAddress;
import com.example.entity.TbUser;
import com.example.mapper.AddressMapper;
import com.example.mapper.UserMapper;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AddressService {
    private final AddressMapper addressMapper;

    public AddressService(AddressMapper addressMapper) {
        this.addressMapper = addressMapper;
    }

    public List<TbAddress> getAddressByUserId(int userId, int page, int rows){
        return addressMapper.getAddressByUserId(userId, page, rows);
    }
}
```

```java
// UserService.java
package com.example.service;

import com.example.entity.TbUser;
import com.example.mapper.UserMapper;
import org.springframework.stereotype.Service;

@Service
public class UserService {
    private final UserMapper userMapper;

    public UserService(UserMapper userMapper) {
        this.userMapper = userMapper;
    }

    public TbUser getUserById(int userId){
        return userMapper.getUserById(userId);
    }
}
```

```java
// AddressController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.TbAddress;
import com.example.entity.TbUser;
import com.example.service.UserService;
import com.example.service.AddressService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import java.util.List;

@RestController
@RequestMapping("/user/v1/user")
public class AddressController {
    private final UserService userService;
    private final AddressService addressService;

    @Autowired
    public AddressController(UserService userService, AddressService addressService) {
        this.userService = userService;
        this.addressService = addressService;
    }

    @GetMapping("/{userId}/address")
    public ApiResponse<List<TbAddress>> getAddressByUserId(@PathVariable int userId, int page, int rows) {
        TbUser user = userService.getUserById(userId);
        if (user == null) {
            return new ApiResponse<>(-1002, "用户不存在", null);
        }
        int offset = (page - 1) * rows;
        List<TbAddress> addressList = addressService.getAddressByUserId(userId, offset, rows);
        return new ApiResponse<>(100, "成功", addressList);
    }
}
```

```java
// AddressMapper.java
package com.example.mapper;

import com.example.entity.TbAddress;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface AddressMapper {
    List<TbAddress> getAddressByUserId(@Param("userId") int userId, @Param("page") int page, @Param("rows") int rows);
}
```

```java
// UserMapper.java
package com.example.mapper;

import com.example.entity.TbUser;

import org.apache.ibatis.annotations.Param;

public interface UserMapper {
    TbUser getUserById(@Param("userId") int userId);
}
```

```xml
<!-- AddressMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.AddressMapper">
    <select id="getAddressByUserId" parameterType="map" resultType="com.example.entity.TbAddress">
        SELECT * FROM tb_address WHERE user_id = #{userId} ORDER BY is_default DESC LIMIT #{page}, #{rows}
    </select>
</mapper>
```

```xml
<!-- UserMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <select id="getUserById" parameterType="int" resultType="com.example.entity.TbUser">
        SELECT * FROM tb_user WHERE user_id = #{userId}
    </select>
</mapper>
```