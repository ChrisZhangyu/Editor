
```java
// Question.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Question {
    private int id;
    private int questionType;
    private int subjectId;
    private int score;
    private int gradeLevel;
    private int difficult;
    private String correct;
    private int infoTextContentId;
    private int createUser;
    private int status;
    private Date createTime;
    private boolean deleted;
}
```
```java
// QuestionSelectRequest.java
package com.example.entity;




import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class QuestionSelectRequest {
    private int id;
}
```
```java
// QuestionSelectResponse.java
package com.example.entity;



import com.example.entity.Question;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class QuestionSelectResponse {
    private int code;
    private String message;
    private Question response;
}
```

```java
// QuestionService.java
package com.example.service;

import com.example.entity.QuestionSelectResponse;

public interface QuestionService {
    QuestionSelectResponse selectQuestion(int id);
}
```

```java
// QuestionServiceImpl.java
package com.example.service.impl;

import com.example.service.QuestionService;
import com.example.entity.Question;
import com.example.mapper.QuestionMapper;
import com.example.entity.QuestionSelectResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class QuestionServiceImpl implements QuestionService {

    private final QuestionMapper questionMapper;

    @Autowired
    public QuestionServiceImpl(QuestionMapper questionMapper) {
        this.questionMapper = questionMapper;
    }

    @Override
    public QuestionSelectResponse selectQuestion(int id) {
        QuestionSelectResponse response = new QuestionSelectResponse();
        Question question = questionMapper.selectQuestionById(id);
        if (question != null) {
            response.setCode(1);
            response.setMessage("成功");
            response.setResponse(question);
        } else {
            response.setCode(0);
            response.setMessage("失败");
        }
        return response;
    }
}
```

```java
// QuestionController.java
package com.example.controller;

import com.example.service.QuestionService;
import com.example.entity.QuestionSelectResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/admin/question")
public class QuestionController {

    private final QuestionService questionService;

    @Autowired
    public QuestionController(QuestionService questionService) {
        this.questionService = questionService;
    }

    @PostMapping("/select/{id}")
    public QuestionSelectResponse selectQuestion(@PathVariable int id) {
        return questionService.selectQuestion(id);
    }
}
```

```java
// QuestionMapper.java
package com.example.mapper;

import com.example.entity.Question;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface QuestionMapper {

    //@Select("SELECT * FROM t_question WHERE id = #{id}")
    Question selectQuestionById(@Param("id") int id);
}
```

```xml
<!-- QuestionMapper.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.QuestionMapper">
    <resultMap type="com.example.entity.Question" id="QuestionResult">
        <result property="id" column="id"/>
        <result property="questionType" column="question_type"/>
        <result property="subjectId" column="subject_id"/>
        <result property="score" column="score"/>
        <result property="gradeLevel" column="grade_level"/>
        <result property="difficult" column="difficult"/>
        <result property="correct" column="correct"/>
        <result property="infoTextContentId" column="info_text_content_id"/>
        <result property="createUser" column="createUser"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="deleted" column="deleted"/>
    </resultMap>
    <select id="selectQuestionById" resultType="com.example.entity.Question" resultMap="QuestionResult">
        SELECT * FROM t_question WHERE id = #{id}
    </select>

</mapper>

```