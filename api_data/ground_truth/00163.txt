```java
// ApiResponse.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ApiResponse<T> {
    private int code;
    private String message;
    private T response;
}
```
```java
// MessageUser.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class MessageUser {
    private int id;
    private int messageId;
    private int receiveUserId;
    private String receiveUserName;
    private String receiveRealName;
    private boolean readed;
    private Date createTime;
    private Date readTime;
}
```
```java
// UnreadCountRequest.java
package com.example.entity;


import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class UnreadCountRequest {
    private String userName;
}```
```java
// User.java
package com.example.entity;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {
    private int id;
    private String userUuid;
    private String userName;
    private String password;
    private String realName;
    private int age;
    private int sex;
    private Date birthDay;
    private int userLevel;
    private String phone;
    private int role;
    private int status;
    private String imagePath;
    private Date createTime;
    private Date modifyTime;
    private Date lastActiveTime;
    private boolean deleted;
    private String wxOpenId;
}

```

```java
// UserService.java
package com.example.service;

import com.example.entity.User;
import com.example.mapper.MessageUserMapper;
import com.example.mapper.UserMapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UserService {
    private final UserMapper userMapper;
    private final MessageUserMapper messageUserMapper;

    @Autowired
    public UserService(UserMapper userMapper, MessageUserMapper messageUserMapper) {
        this.userMapper = userMapper;
        this.messageUserMapper = messageUserMapper;
    }

    public int getUnreadMessageCount(String userName) {
        User user = userMapper.getUserByUserName(userName);
        if (user == null) {
            throw new RuntimeException("User not found");
        }
        return messageUserMapper.getUnreadMessageCount(user.getId());
    }
}
```


```java
// UserController.java
package com.example.controller;

import com.example.entity.ApiResponse;
import com.example.entity.UnreadCountRequest;
import com.example.service.UserService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class UserController {
    private final UserService userService;

    @Autowired
    public UserController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping("/api/student/user/message/unreadCount")
    public ApiResponse<Integer> getUnreadMessageCount(@RequestBody UnreadCountRequest request) {
        int count = userService.getUnreadMessageCount(request.getUserName());
        return new ApiResponse<>(1, "成功", count);
    }
}
```

```java
// MessageUserMapper.java
package com.example.mapper;


import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface MessageUserMapper {
    int getUnreadMessageCount(@Param("userId") int userId);
}
```
```java
// UserMapper.java
package com.example.mapper;

import com.example.entity.User;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface UserMapper {
    User getUserByUserName(@Param("userName") String userName);
}
```

```xml
<!-- UserMapper.xml -->
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.User">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="sex" jdbcType="INTEGER" property="sex" />
        <result column="birth_day" jdbcType="TIMESTAMP" property="birthDay" />
        <result column="user_level" jdbcType="INTEGER" property="userLevel" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="role" jdbcType="INTEGER" property="role" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="image_path" jdbcType="VARCHAR" property="imagePath" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="last_active_time" jdbcType="TIMESTAMP" property="lastActiveTime" />
        <result column="deleted" jdbcType="BIT" property="deleted" />
        <result column="wx_open_id" jdbcType="VARCHAR" property="wxOpenId" />
    </resultMap>
    <select id="getUserByUserName" resultType="com.example.entity.User" resultMap="BaseResultMap">
        SELECT * FROM t_user WHERE user_name = #{userName}
    </select>
</mapper>

```

