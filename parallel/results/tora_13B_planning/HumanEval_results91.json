{"task_id": 91, "completion": "<s>\ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\ndef is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for sentence in S.split(\".\"):\n        for sentence in S.split(\"?\"):\n            for sentence in S.split(\"!\"):\n                if sentence.strip().lower().startswith(\"i\"):\n                    count += 1\n    return count\n\n\ndef count_boredoms():\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n    \"\"\"\n    S = input()\n    count = 0\n    for sentence in S.split(\".\"):\n        for sentence in S.split(\"?\"):\n            for sentence in S.split(\"!\"):\n                if sentence.strip().lower().startswith(\"i\"):\n                    count += 1\n    return count\n\n\n\ndef count_boredoms_regex():\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n    \"\"\"\n    import re\n    S = input()\n    count = len(re.findall(r\"[.?!]\\s+I\\s+\", S.lower()))\n    return count\n\n\n\ndef count_boredoms_pythonic():\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n    \"\"\"\n    S = input()\n    count = sum(1 for sentence in S.split(\"?\") for sentence in S.split(\".\") for sentence in S.split(\"!\") if sentence.strip().lower().startswith(\"i\"))\n    return count\n\n\n\n# Tests\n# assert count_boredoms(\"Hello world\") == 0\n# assert count_boredoms(\"The sky is blue. The sun is shining. I love this weather\")"}