{"task_id": 7, "completion": "<s> \ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\nfrom typing import List\n\n\ndef filter_by_substring(strings: List[str], substring: str) -> List[str]:\n    \"\"\" Filter an input list of strings only for ones that contain given substring\n    >>> filter_by_substring([], 'a')\n    []\n    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')\n    ['abc', 'bacd', 'array']\n    \"\"\"\n    return [string for string in strings if substring in string]\n\n\n\ndef main():\n    \"\"\"Call the function and print the result\"\"\"\n    result = filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')\n    print(result)\n\n\n\nif __name__ == \"__main__\":\n    main()\n</s>"}