{"task_id": 152, "completion": "<s>\ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\ndef compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    result = []\n    for i in range(len(game)):\n        result.append(abs(game[i] - guess[i]) if game[i] != guess[i] else 0)\n    return result\n\n\ndef find_winners():\n    \"\"\"\n    In a game of football (soccer), two teams play against each other. The score of the game is determined by the number of goals each team scores.\n    In the end, the team with the most goals wins. If the score is equal, the team with the most penalty points wins.\n    If the score and penalty points are equal, the team with the fewest yellow cards wins.\n    If all of the above are equal, the team with the fewest red cards wins.\n    If all of the above are equal, the team with the fewest goals conceded wins.\n    If all of the above are equal, the team with the fewest own goals wins.\n    If all of the above are equal, the team with the fewest yellow cards conceded wins.\n    If all of the above are equal, the team with the fewest red cards conceded wins.\n    If all of the above are equal, the team with the most goals scored in extra time wins.\n    If all of the above are equal, the team with the most penalty points scored in extra time wins.\n    If all of the above are equal, the team with the fewest yellow cards scored in extra time wins.\n    If all of the above are equal, the team with the fewest red cards scored in extra time wins.\n    If all of the above are equal, the team with the fewest goals conceded in extra time wins.\n    If all of the above are equal, the team with the fewest yellow cards conceded in extra time wins.\n    If all of the above are equal, the team with the fewest red cards conceded in extra time wins.\n    If all of the above are equal, the team with the most goals scored wins.\n    \n    Given the scores and penalty points for each team, determine the winner.\n    \n    example:\n    find_winners([1,1,0,0,0],[0,0,0,0]) -> 1\n    find_winners([1,1,0,0],[1,0,0])"}