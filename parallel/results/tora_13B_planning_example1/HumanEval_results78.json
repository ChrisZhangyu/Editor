{"task_id": 78, "completion": "<s> \ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\ndef hex_key(num):\n    \"\"\"You have been tasked to write a function that receives \n    a hexadecimal number as a string and counts the number of hexadecimal \n    digits that are primes (prime number, or a prime, is a natural number \n    greater than 1 that is not a product of two smaller natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11), D (=decimal 13).\n    Note: you may assume the input is always correct or empty string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n    For num = \"AB\" the output should be 1.\n    For num = \"1077E\" the output should be 2.\n    For num = \"ABED1A33\" the output should be 4.\n    For num = \"123456789ABCDEF0\" the output should be 6.\n    For num = \"2020\" the output should be 2.\n    \"\"\"\n    # Define a list of prime hexadecimal digits\n    prime_hex = ['2', '3', '5', '7', 'B', 'D']\n\n    # Convert the string to uppercase\n    num = num.upper()\n    # Count the prime hexadecimal digits\n    count = sum(1 for digit in num if digit in prime_hex)\n\n    return count\n\n\ndef main():\n    \"\"\"\n    Call the function and display the result\n    \"\"\"\n    result = hex_key(\"AB\")\n    print(result)\n\n    result = hex_key(\"107E\")\n    print(result)\n\n    result = hex_key(\"ABED1A33\")\n    print(result)\n\n    result = hex_key(\"123456789ABCDEF0\")\n    print(result)\n\n    result = hex_key(\"2020\")\n    print(result)\n\n\nmain()\n</s>"}