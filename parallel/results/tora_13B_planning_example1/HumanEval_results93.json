{"task_id": 93, "completion": "<s> \ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\ndef encode(message):\n    \"\"\"\n    Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = []\n    for letter in message:\n        if letter.lower() in vowels:\n            result.append(vowels[(vowels.index(letter.lower()) + 2) % len(vowels)])\n        else:\n            result.append(letter)\n    return ''.join(result)\n\n\ndef decrypt(s):\n    '''\n    Create a function decrypt that takes a string as an argument and returns a string decrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift up by two multiplied to two places.\n    For example:\n    decrypt(\u2019lm\u2019) returns \u2019hi\u2019\n    decrypt(\u2019ewhjklnop\u2019) returns \u2019asdfghjkl\u2019\n    decrypt(\u2019kj\u2019) returns \u2019gf\u2019\n    decrypt(\u2019ix\u2019) returns \u2019et\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = []\n    for letter in s:\n        if letter.lower() in vowels:\n            result.append(vowels[(vowels.index(letter.lower()) - 2) % len(vowels)])\n        else:\n            result.append(letter)\n    return ''.join(result)\n\n\ndef main():\n    \"\"\"\n    This is the main function that will be executed when the script is run.\n    This function acts as a controller for the other functions.\n    \"\"\"\n    message = \"This is a message\"\n    encrypted_message = encode(message)\n    print(encrypted_message)\n    decrypted_message = decrypt(encrypted_message)\n    print(decrypted_message)\n\n\nif __name__ == \"__main__\":\n    main()</s>"}