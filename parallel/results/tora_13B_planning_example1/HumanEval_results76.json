{"task_id": 76, "completion": "<s>\ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\ndef is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x**0.5)\n\n\ndef is_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a power of n and false in other cases.\n    x is a power of n if n**int(x/n) = x\n    For example:\n    is_power(1, 4) => true\n    is_power(2, 2) => true\n    is_power(8, 2) => true\n    is_power(3, 2) => false\n    is_power(3, 1) => false\n    is_power(5, 3) => false\n    \"\"\"\n    return n**int(x/n) == x\n\n\ndef is_square(x):\n    \"\"\"Your task is to write a function that returns true if a number x is a square and false in other cases.\n    x is a square if x = n**2 for some integer n\n    For example:\n    is_square(4) => true\n    is_square(9) => true\n    is_square(5) => false\n    \"\"\"\n    return is_power(x, 2)\n\n\ndef is_cube(x):\n    \"\"\"Your task is to write a function that returns true if a number x is a cube and false in other cases.\n    x is a cube if x = n**3 for some integer n\n    For example:\n    is_cube(8) => true\n    is_cube(27) => true\n    is_cube(5) => false\n    \"\"\"\n    return is_power(x, 3)\n\n\ndef is_prime(n):\n    \"\"\"Your task is to write a function that checks if a number is prime or not.\n    A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.\n    For example:\n    is_prime(2) => true\n    is_prime(4) => false\n    is_prime(5) => true\n    \"\"\"\n    if n == 2:\n        return True\n    for i in range(2, n):\n        if n % i == 0:\n            return False"}