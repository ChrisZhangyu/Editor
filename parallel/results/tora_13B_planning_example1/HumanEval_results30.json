{"task_id": 30, "completion": "<s>\ndef encrypt(s):\n    '''\n    Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being\n    rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places.\n    For example:\n    encrypt(\u2019hi\u2019) returns \u2019lm\u2019\n    encrypt(\u2019asdfghjkl\u2019) returns \u2019ewhjklnop\u2019\n    encrypt(\u2019gf\u2019) returns \u2019kj\u2019\n    encrypt(\u2019et\u2019) returns \u2019ix\u2019\n    Let\u2019s think step by step.\n    1. Create a alphabet, bias two places multiplied by two.\n    2. Loop the input, find the latter bias letter in alphabet.\n    3. Return result.\n    '''\n\n\n\ndef get_positive(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> get_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i >= 0]\n\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\n\ndef sum_positive_negative():\n    \"\"\"Sum the positive and negative numbers in the list.\n    >>> sum_positive_negative([-1, 2, -4, 5, 6])\n    -3\n    >>> sum_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    126\n    \"\"\"\n    l = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    positive = get_positive(l)\n    negative = get_negative(l)\n    return sum(positive) - sum(negative)\n\n\n\nresult = sum_positive_negative()\nprint(result)\n\n\n\ndef sum_positive_negative():\n    \"\"\"Sum the positive and negative numbers in the list.\n    >>> sum_positive_negative([-1, 2, -4, 5, 6])\n    -3\n    >>> sum_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    126\n    \"\"\"\n    l = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    positive = get_positive(l)\n    negative = get_negative(l)\n    return sum("}