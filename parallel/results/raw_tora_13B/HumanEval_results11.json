{"task_id": 11, "completion": "<s>from typing import List\n\n\ndef string_xor(a: str, b: str) -> str:\n    \"\"\" Input are two strings a and b consisting only of 1s and 0s.\n    Perform binary XOR on these inputs and return result also as a string.\n    >>> string_xor('010', '110')\n    '100'\n    \"\"\"\n    return format(int(a, 2) ^ int(b, 2), 'b')\n\n\ndef binary_xor(a: int, b: int) -> int:\n    \"\"\" Input are two integers a and b.\n    Perform binary XOR on these inputs and return result.\n    >>> binary_xor(10, 110)\n    0\n    \"\"\"\n    return a ^ b\n\ndef binary_and(a: int, b: int) -> int:\n    \"\"\" Input are two integers a and b.\n    Perform binary AND on these inputs and return result.\n    >>> binary_and(10, 10)\n    10\n    \"\"\"\n    return a & b\n\ndef binary_or(a: int, b: int) -> int:\n    \"\"\" Input are two integers a and b.\n    Perform binary OR on these inputs and return result.\n    >>> binary_or(10, 10)\n    10\n    \"\"\"\n    return a | b\n\ndef binary_not(a: int) -> int:\n    \"\"\" Input is an integer a.\n    Perform binary NOT on this input and return result.\n    >>> binary_not(10)\n    1111111111111111111111111111111111111111111111111111111111110\n    \"\"\"\n    return ~a\n\ndef binary_left_shift(a: int, b: int) -> int:\n    \"\"\" Input are two integers a and b.\n    Perform binary left shift on a by b and return result.\n    >>> binary_left_shift(10, 10)\n    1000000\n    \"\"\"\n    return a << b\n\ndef binary_right_shift(a: int, b: int) -> int:\n    \"\"\" Input are two integers a and b.\n    Perform binary right shift on a by b and return result.\n    >>> binary_right_shift(10, 10)\n    1000000\n    \"\"\"\n    return a >> b\n\n\ndef binary_to_"}