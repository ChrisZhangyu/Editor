{"task_id": 44, "completion": "<s>\n\ndef change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < base:\n        return str(x)\n    else:\n        return change_base(x//base, base) + str(x%base)\n\n\ndef decimal_to_base_n(n: int, base: int):\n    \"\"\"\n    Convert decimal number to base n representation.\n    \"\"\"\n    if n < 0:\n        return '-' + change_base(-n, base)\n    else:\n        return change_base(n, base)\n\n\ndef base_n_to_decimal(n: str, base: int):\n    \"\"\"\n    Convert base n representation to decimal.\n    \"\"\"\n    if n[0] == '-':\n        return -int(n[1:], base)\n    else:\n        return int(n, base)\n\ndef base_n_addition(n1: str, n2: str, base: int):\n    \"\"\"\n    Addition of base n numbers.\n    \"\"\"\n    return decimal_to_base_n(base_n_to_decimal(n1, base) + base_n_to_decimal(n2, base), base)\n\n\ndef base_n_subtraction(n1: str, n2: str, base: int):\n    \"\"\"\n    Subtraction of base n numbers.\n    \"\"\"\n    return decimal_to_base_n(base_n_to_decimal(n1, base) - base_n_to_decimal(n2, base), base)\n\n\ndef base_n_multiplication(n1: str, n2: str, base: int):\n    \"\"\"\n    Multiplication of base n numbers.\n    \"\"\"\n    return decimal_to_base_n(base_n_to_decimal(n1, base) * base_n_to_decimal(n2, base), base)\n\n\ndef base_n_division(n1: str, n2: str, base: int):\n    \"\"\"\n    Division of base n numbers.\n    \"\"\"\n    return decimal_to_base_n(base_n_to_decimal(n1, base) // base_n_to_decimal(n2, base), base)\n"}