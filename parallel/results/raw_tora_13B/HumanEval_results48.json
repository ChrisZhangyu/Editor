{"task_id": 48, "completion": "<s>\n\ndef is_palindrome(text: str):\n    \"\"\"\n    Checks if given string is a palindrome\n    >>> is_palindrome('')\n    True\n    >>> is_palindrome('aba')\n    True\n    >>> is_palindrome('aaaaa')\n    True\n    >>> is_palindrome('zbcd')\n    False\n    \"\"\"\n    return text == text[::-1]\n\n\ndef reverse_string(text: str):\n    \"\"\"\n    Reverses a string\n    >>> reverse_string('')\n    ''\n    >>> reverse_string('aba')\n    'ab'\n    >>> reverse_string('aaaaa')\n    ''\n    \"\"\"\n    return text[::-1]\n\ndef reverse_words(text: str):\n    \"\"\"\n    Reverses the order of words in a string\n    >>> reverse_words('')\n    ''\n    >>> reverse_words('aba')\n    'aba'\n    >>> reverse_words('ab cd')\n    'cd ab'\n    \"\"\"\n    return ' '.join(text.split()[::-1])\n\ndef reverse_sentence(text: str):\n    \"\"\"\n    Reverses the order of words and characters in a string\n    >>> reverse_sentence('')\n    ''\n    >>> reverse_sentence('aba')\n    'baa'\n    >>> reverse_sentence('ab cd')\n    'dc ba'\n    \"\"\"\n    return ' '.join(reverse_string(word) for word in reverse_words(text).split())\n\ndef is_anagram(text1: str, text2: str):\n    \"\"\"\n    Checks if two strings are anagrams\n    >>> is_anagram('', '')\n    True\n    >>> is_anagram('aba', 'bab')\n    True\n    >>> is_anagram('ab', 'cd')\n    False\n    \"\"\"\n    return sorted(text1) == sorted(text2)\n\ndef is_rotation(text1: str, text2: str):\n    \"\"\"\n    Checks if one string is a rotation of another\n    >>> is_rotation('', '')\n    True\n    >>> is_rotation('aba', 'bab')\n    True\n    >>> is_rotation('ab', 'cd')\n    False\n    \"\"\"\n    return text1 in text2*2 or text2 in text1*2\n\ndef is_palindrome_permutation(text1: str, text2: str):\n    \"\"\"\n    Checks if two strings are permutations of a palindrome\n    >>> is_palind"}