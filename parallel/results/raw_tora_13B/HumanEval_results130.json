{"task_id": 130, "completion": "<s> \ndef tri(n):\n    \"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n    the last couple centuries. However, what people don't know is Tribonacci sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1) = 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2) = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 + 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a return a list of the \n    first n + 1 numbers of the Tribonacci sequence.\n    Examples:\n    tri(3) = [1, 3, 2, 8]\n    \"\"\"\n    # Base case\n    if n == 1:\n        return [1]\n    \n    # Recursive case\n    else:\n        # Compute the first n odd numbers of the sequence\n        odd_numbers = [tri(i) for i in range(1, n + 1, 2)]\n        # Compute the first n even numbers of the sequence\n        even_numbers = [tri(i) for i in range(2, n + 1, 2)]\n        # The nth number of the sequence is the sum of the nth odd number and the nth even number\n        nth_number = odd_numbers[-1] + even_numbers[-1]\n        # Prepend the nth number to the sequence\n        sequence = [nth_number] + odd_numbers + even_numbers\n        return sequence\n\n\nresult = tri(5)\nprint(result)\n</s>"}