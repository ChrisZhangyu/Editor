{"task_id": 24, "completion": "<s>\n\ndef largest_divisor(n: int) -> int:\n    \"\"\" For a given number n, find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\n    for i in range(n, 0, -1, -1):\n        if n % i == 0:\n            return i\n\n\ndef smallest_divisor(n: int) -> int:\n    \"\"\" For a given number n, find the smallest number that divides n evenly, larger than 1\n    >>> smallest_divisor(15)\n    3\n    \"\"\"\n    for i in range(2, n+1):\n        if n % i == 0:\n            return i\n\n\ndef divisors(n: int) -> list:\n    \"\"\" For a given number n, find all divisors of n\n    >>> divisors(15)\n    [3, 5]\n    \"\"\"\n    divs = []\n    for i in range(2, n+1):\n        if n % i == 0:\n            divs.append(i)\n    return divs\n\ndef is_prime(n: int) -> bool:\n    \"\"\" Check if a number n is prime\n    >>> is_prime(15)\n    False\n    >>> is_prime(111)\n    True\n    \"\"\"\n    for i in range(2, n):\n        if n % i == 0:\n            return False\n    return True\n\ndef prime_factors(n: int) -> list:\n    \"\"\" For a given number n, find all prime factors of n\n    >>> prime_factors(15)\n    [3, 5]\n    \"\"\"\n    factors = []\n    for i in range(2, n+1):\n        if n % i == 0 and is_prime(i):\n            factors.append(i)\n    return factors\n\ndef is_composite(n: int) -> bool:\n    \"\"\" Check if a number n is composite\n    >>> is_composite(115)\n    True\n    >>> is_composite(111)\n    False\n    \"\"\"\n    for i in range(2, n):\n        if n % i == 0:\n            return True\n    return False\n\ndef is_abundant(n: int) -> bool:\n    \"\"\" Check if a number n is abundant\n    A number n is abundant if the sum"}