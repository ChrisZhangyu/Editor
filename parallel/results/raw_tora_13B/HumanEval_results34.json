{"task_id": 34, "completion": "<s>\n\ndef unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\n\ndef unique_counts(l: list):\n    \"\"\"Return unique elements in a list and their counts\n    >>> unique_counts([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [(0, 1), (2, 1), (3, 2), (5, 2), (9, 1), (123, 1)]\n    \"\"\"\n    return sorted(set(Counter(l).items())\n\ndef unique_counts_dict(l: list):\n    \"\"\"Return unique elements in a list and their counts\n    >>> unique_counts_dict([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    {0: 1, 2: 1, 3: 2, 5: 2, 9: 1, 123: 1}\n    \"\"\"\n    return Counter(l)\n\n\ndef mode(l: list):\n    \"\"\"Return the mode of a list\n    >>> mode([5, 3, 5, 2, 3, 9, 0, 123])\n    3\n    \"\"\"\n    return max(set(unique_counts(l), key=lambda x: x[1])\n\n\ndef mode_count(l: list):\n    \"\"\"Return the count of the mode of a list\n    >>> mode_count([5, 3, 5, 2, 3, 9, 0, 123])\n    2\n    \"\"\"\n    return mode(l)[1]\n\n\ndef mode_value(l: list):\n    \"\"\"Return the mode value of a list\n    >>> mode_value([5, 3, 5, 2, 3, 9, 0, 123])\n    3\n    \"\"\"\n    return mode(l)[0]\n\ndef median(l: list):\n    \"\"\"Return the median of a list\n    >>> median([5, 3, 5, 2, 3, 9, 0, 123])\n    3\n    \"\"\""}