{"task_id": 126, "completion": "<s> \ndef is_sorted(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n    # Check if list has duplicates\n    if len(set(lst)) != len(lst):\n        return False\n    \n    # Check if list is sorted\n    if lst == sorted(lst):\n        return True\n    else:\n        return False\n\n\nresult = is_sorted([5])\nprint(result)\nresult = is_sorted([1, 2, 3, 4, 5])\nprint(result)\nresult = is_sorted([1, 3, 2, 4, 5])\nprint(result)\nresult = is_sorted([1, 2, 3, 4, 5, 6])\nprint(result)\nresult = is_sorted([1, 3, 2, 4, 5, 6])\nprint(result)\nresult = is_sorted([1, 2, 2, 3, 3, 4])\nprint(result)\nresult = is_sorted([1, 2, 2, 3, 4])\nprint(result)</s>"}