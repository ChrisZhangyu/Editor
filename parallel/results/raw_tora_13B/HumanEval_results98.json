{"task_id": 98, "completion": "<s>\ndef count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper():\n            count += 1\n    return count\n\n\ndef count_lower(s):\n    \"\"\"\n    Given a string s, count the number of lowercase vowels in odd indices.\n    \n    For example:\n    count_lower('aBCdEf') returns 3\n    count_lower('abcdefg') returns 3\n    count_lower('dBBE') returns 1\n    \"\"\"\n    count = 0\n    for i in range(1, len(s), 2):\n        if s[i].islower():\n            count += 1\n    return count\n\ndef count_vowels(s):\n    \"\"\"\n    Given a string s, count the number of vowels in even indices and the number of vowels in odd indices.\n    \n    For example:\n    count_vowels('aBCdEf') returns (1, 3)\n    count_vowels('abcdefg') returns (0, 3)\n    count_vowels('dBBE') returns (0, 1)\n    \"\"\"\n    return count_upper(s), count_lower(s)\n\n\ndef is_valid_password(s):\n    \"\"\"\n    Given a string s, check if it is a valid password.\n    A valid password has at least one uppercase vowel in even indices and at least one lowercase vowel in odd indices.\n    \n    For example:\n    is_valid_password('aBCdEf') returns True\n    is_valid_password('abcdefg') returns False\n    is_valid_password('dBBE') returns False\n    \"\"\"\n    upper, lower = count_vowels(s)\n    return upper > 0 and lower > 0\n\ndef valid_passwords():\n    \"\"\"\n    Iterate through the list of passwords and return the number of valid passwords.\n    \"\"\"\n    passwords = ['aBCdEf', 'abcdefg', 'dBBE']\n    valid_count = 0\n    for password in passwords:\n        if is_valid_password(password):\n            valid"}